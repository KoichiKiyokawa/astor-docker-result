Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
log4j:ERROR setFile(null,true) call failed.
java.io.FileNotFoundException:  (No such file or directory)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(FileOutputStream.java:270)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:133)
	at org.apache.log4j.FileAppender.setFile(FileAppender.java:294)
	at org.apache.log4j.RollingFileAppender.setFile(RollingFileAppender.java:207)
	at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:165)
	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:307)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:172)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:104)
	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:842)
	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:768)
	at org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:672)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:516)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:580)
	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)
	at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)
	at org.apache.log4j.Logger.getLogger(Logger.java:117)
	at fr.inria.astor.core.setup.ConfigurationProperties.<clinit>(ConfigurationProperties.java:16)
	at fr.inria.main.AbstractMain.<clinit>(AbstractMain.java:99)
2019-09-15 09:43:32,199 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.7.0_181
2019-09-15 09:43:32,200 INFO main - Java version of the JDK used to run tests: 1.7.0_181
2019-09-15 09:43:32,200 INFO main - The compliance of the JVM is:  7
2019-09-15 09:43:32,202 INFO main - command line arguments: [-mode  jgenprog  -location  .  -id  Math-71  -failing  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  x:x  -dependencies  /script/jGenProg_Defects4J_Math_71/target/classes/:/script/jGenProg_Defects4J_Math_71/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar]
2019-09-15 09:43:32,204 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:960) - Source folders: [/script/jGenProg_Defects4J_Math_71/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:979) - Source Test folders: [/script/jGenProg_Defects4J_Math_71/./src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Math_71/./output_astor/AstorMain-Math-71//bin//default from 468 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Math_71/./output_astor/AstorMain-Math-71//bin//default, /script/jGenProg_Defects4J_Math_71/target/classes/, /script/jGenProg_Defects4J_Math_71/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:2169, fails: 3, GZoltar suspicious 16336, with positive susp 623
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 2169
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 375 with susp > 0.1, we consider: 375
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:955) - Setting up the max to 242390 milliseconds (242 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:801) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Math_71/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /script/jGenProg_Defects4J_Math_71/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:80) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Math_71/target/classes/, /script/jGenProg_Defects4J_Math_71/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:836) - Number of CtTypes created: 409
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 375
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryTestCase, methodName=runTest()V, lineNumber=52, susp=0.5773502691896258]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 375,  334
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 334
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 334, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 2.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Math_71/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 242390
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Math-71
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Math_71/target/classes/:/script/jGenProg_Defects4J_Math_71/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:183) - Killed the Process that runs JUnit test cases 794
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:183) - Killed the Process that runs JUnit test cases 841
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:183) - Killed the Process that runs JUnit test cases 1743
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:449) - -Found Solution, child variant #98
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:359) - Error variant :98 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 101.493
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 49
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:186) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 98
 
time(sec)= 101
operation: InsertAfterOp
location= org.apache.commons.math.ode.events.EventState
line= 177
lineSuspiciousness= 0.118
lineSuspiciousness= 195
original statement= double ta = t0
buggy kind= CtLocalVariableImpl|CtBlockImpl
fixed statement= if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {




	return false;
}
Patch kind= CtIfImpl|CtBlockImpl
generation= 49
ingredientScope= LOCAL
validation=|true|0|2169|[]|
diffpatch=--- /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
+++ /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
@@ -72,6 +72,9 @@
 			final int n = java.lang.Math.max(1, ((int) (java.lang.Math.ceil(java.lang.Math.abs(t1 - t0) / maxCheckInterval))));
 			final double h = (t1 - t0) / n;
 			double ta = t0;
+			if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {
+				return false;
+			}
 			double ga = g0;
 			double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
 			for (int i = 0; i < n; ++i) {


diffpatchoriginal=--- /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
+++ /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
@@ -175,20 +175,12 @@
 			final double h = (t1 - t0) / n;
 
 			double ta = t0;
-			double ga = g0;
-			double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-			for (int i = 0; i < n; ++i) {
 
 
-				tb += h;
-				interpolator.setInterpolatedTime(tb);
-				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
 
-				if (g0Positive ^ (gb >= 0)) {
 
 
-					if ((ga * gb) > 0) {
 
 
 
@@ -196,52 +188,60 @@
 
 
 
-						final double epsilon = (forward ? 0.25 : -0.25) * convergence;
-						for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) {
-							ta += epsilon;
-							interpolator.setInterpolatedTime(ta);
-							ga = handler.g(ta, interpolator.getInterpolatedState());
-						}
-						if ((ga * gb) > 0) {
 
-							throw org.apache.commons.math.MathRuntimeException.createInternalError(null);
-						}
-					}
 
 
-					increasing = gb >= ga;
 
-					final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analysis.UnivariateRealFunction() {
-						public double value(final double t) throws org.apache.commons.math.FunctionEvaluationException {
-							try {
-								interpolator.setInterpolatedTime(t);
-								return handler.g(t, interpolator.getInterpolatedState());
-							} catch (org.apache.commons.math.ode.DerivativeException e) {
-								throw new org.apache.commons.math.FunctionEvaluationException(e, t);
-							} catch (org.apache.commons.math.ode.events.EventException e) {
-								throw new org.apache.commons.math.FunctionEvaluationException(e, t);
-							}
-						}
-					};
-					final org.apache.commons.math.analysis.solvers.BrentSolver solver = new org.apache.commons.math.analysis.solvers.BrentSolver();
-					solver.setAbsoluteAccuracy(convergence);
-					solver.setMaximalIterationCount(maxIterationCount);
-					final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-					if ((java.lang.Math.abs(root - ta) <= convergence) && 
-					(java.lang.Math.abs(root - previousEventTime) <= convergence)) {
 
-						ta = tb;
-						ga = gb;
-					} else 						if (java.lang.Double.isNaN(previousEventTime) || 
-						(java.lang.Math.abs(previousEventTime - root) > convergence)) {
-							pendingEventTime = root;
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 							if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {
 
 
 
 
 								return false;
-							}
+			} 			double ga = g0; 			double tb = t0 + (interpolator.isForward() ? convergence : -convergence); 			for (int i = 0; i < n; ++i) { 				tb += h; 				interpolator.setInterpolatedTime(tb); 				final double gb = handler.g(tb, interpolator.getInterpolatedState()); 				if (g0Positive ^ (gb >= 0)) { 					if ((ga * gb) > 0) { 						final double epsilon = (forward ? 0.25 : -0.25) * convergence; 						for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) { 							ta += epsilon; 							interpolator.setInterpolatedTime(ta); 							ga = handler.g(ta, interpolator.getInterpolatedState());} 						if ((ga * gb) > 0) { 							throw org.apache.commons.math.MathRuntimeException.createInternalError(null);}} 					increasing = gb >= ga; 					final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analysis.UnivariateRealFunction() { 						public double value(final double t) throws org.apache.commons.math.FunctionEvaluationException { 							try { 								interpolator.setInterpolatedTime(t); 								return handler.g(t, interpolator.getInterpolatedState());} catch (org.apache.commons.math.ode.DerivativeException e) { 								throw new org.apache.commons.math.FunctionEvaluationException(e, t);} catch (org.apache.commons.math.ode.events.EventException e) { 								throw new org.apache.commons.math.FunctionEvaluationException(e, t);}}}; 					final org.apache.commons.math.analysis.solvers.BrentSolver solver = new org.apache.commons.math.analysis.solvers.BrentSolver(); 					solver.setAbsoluteAccuracy(convergence); 					solver.setMaximalIterationCount(maxIterationCount); 					final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta); 					if ((java.lang.Math.abs(root - ta) <= convergence) && (java.lang.Math.abs(root - previousEventTime) <= convergence)) { 						ta = tb; 						ga = gb;} else 						if (java.lang.Double.isNaN(previousEventTime) || (java.lang.Math.abs(previousEventTime - root) > convergence)) { 							pendingEventTime = root; 							if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) { 								return false;}
 
 
 							pendingEvent = true;



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Math-71
TOTAL_TIME=101.493
NR_GENERATIONS=49
NR_RIGHT_COMPILATIONS=28
NR_FAILLING_COMPILATIONS=21
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=98
TIME=101
VALIDATION=|true|0|2169|[]|
GENERATION=49
FOLDER_SOLUTION_CODE=/script/jGenProg_Defects4J_Math_71/./output_astor/AstorMain-Math-71//src//variant-98
--Patch Hunk #1
OPERATOR=InsertAfterOp

LOCATION=org.apache.commons.math.ode.events.EventState

PATH=/script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventState.java

MODIFIED_FILE_PATH=/script/jGenProg_Defects4J_Math_71/./output_astor/AstorMain-Math-71//src//variant-98/org/apache/commons/math/ode/events/EventState.java

LINE=177

SUSPICIOUNESS=0.118

MP_RANKING=195

ORIGINAL_CODE=double ta = t0

BUGGY_CODE_TYPE=CtLocalVariableImpl|CtBlockImpl

PATCH_HUNK_CODE=if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {




	return false;
}

PATCH_HUNK_TYPE=CtIfImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {




	return false;
}

PATCH_DIFF_ORIG=--- /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
+++ /script/jGenProg_Defects4J_Math_71/src/main/java/org/apache/commons/math/ode/events/EventStatejava
@@ -175,20 +175,12 @@
 			final double h = (t1 - t0) / n;
 
 			double ta = t0;
-			double ga = g0;
-			double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
-			for (int i = 0; i < n; ++i) {
 
 
-				tb += h;
-				interpolator.setInterpolatedTime(tb);
-				final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
 
-				if (g0Positive ^ (gb >= 0)) {
 
 
-					if ((ga * gb) > 0) {
 
 
 
@@ -196,52 +188,60 @@
 
 
 
-						final double epsilon = (forward ? 0.25 : -0.25) * convergence;
-						for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) {
-							ta += epsilon;
-							interpolator.setInterpolatedTime(ta);
-							ga = handler.g(ta, interpolator.getInterpolatedState());
-						}
-						if ((ga * gb) > 0) {
 
-							throw org.apache.commons.math.MathRuntimeException.createInternalError(null);
-						}
-					}
 
 
-					increasing = gb >= ga;
 
-					final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analysis.UnivariateRealFunction() {
-						public double value(final double t) throws org.apache.commons.math.FunctionEvaluationException {
-							try {
-								interpolator.setInterpolatedTime(t);
-								return handler.g(t, interpolator.getInterpolatedState());
-							} catch (org.apache.commons.math.ode.DerivativeException e) {
-								throw new org.apache.commons.math.FunctionEvaluationException(e, t);
-							} catch (org.apache.commons.math.ode.events.EventException e) {
-								throw new org.apache.commons.math.FunctionEvaluationException(e, t);
-							}
-						}
-					};
-					final org.apache.commons.math.analysis.solvers.BrentSolver solver = new org.apache.commons.math.analysis.solvers.BrentSolver();
-					solver.setAbsoluteAccuracy(convergence);
-					solver.setMaximalIterationCount(maxIterationCount);
-					final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
-					if ((java.lang.Math.abs(root - ta) <= convergence) && 
-					(java.lang.Math.abs(root - previousEventTime) <= convergence)) {
 
-						ta = tb;
-						ga = gb;
-					} else 						if (java.lang.Double.isNaN(previousEventTime) || 
-						(java.lang.Math.abs(previousEventTime - root) > convergence)) {
-							pendingEventTime = root;
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 							if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) {
 
 
 
 
 								return false;
-							}
+			} 			double ga = g0; 			double tb = t0 + (interpolator.isForward() ? convergence : -convergence); 			for (int i = 0; i < n; ++i) { 				tb += h; 				interpolator.setInterpolatedTime(tb); 				final double gb = handler.g(tb, interpolator.getInterpolatedState()); 				if (g0Positive ^ (gb >= 0)) { 					if ((ga * gb) > 0) { 						final double epsilon = (forward ? 0.25 : -0.25) * convergence; 						for (int k = 0; (k < 4) && ((ga * gb) > 0); ++k) { 							ta += epsilon; 							interpolator.setInterpolatedTime(ta); 							ga = handler.g(ta, interpolator.getInterpolatedState());} 						if ((ga * gb) > 0) { 							throw org.apache.commons.math.MathRuntimeException.createInternalError(null);}} 					increasing = gb >= ga; 					final org.apache.commons.math.analysis.UnivariateRealFunction f = new org.apache.commons.math.analysis.UnivariateRealFunction() { 						public double value(final double t) throws org.apache.commons.math.FunctionEvaluationException { 							try { 								interpolator.setInterpolatedTime(t); 								return handler.g(t, interpolator.getInterpolatedState());} catch (org.apache.commons.math.ode.DerivativeException e) { 								throw new org.apache.commons.math.FunctionEvaluationException(e, t);} catch (org.apache.commons.math.ode.events.EventException e) { 								throw new org.apache.commons.math.FunctionEvaluationException(e, t);}}}; 					final org.apache.commons.math.analysis.solvers.BrentSolver solver = new org.apache.commons.math.analysis.solvers.BrentSolver(); 					solver.setAbsoluteAccuracy(convergence); 					solver.setMaximalIterationCount(maxIterationCount); 					final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta); 					if ((java.lang.Math.abs(root - ta) <= convergence) && (java.lang.Math.abs(root - previousEventTime) <= convergence)) { 						ta = tb; 						ga = gb;} else 						if (java.lang.Double.isNaN(previousEventTime) || (java.lang.Math.abs(previousEventTime - root) > convergence)) { 							pendingEventTime = root; 							if (pendingEvent && (java.lang.Math.abs(t1 - pendingEventTime) <= convergence)) { 								return false;}
 
 
 							pendingEvent = true;



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 330.478


Node: d454fa1ba6f7



Date: Sun Sep 15 09:49:03 EDT 2019

cd /script/jGenProg_Defects4J_Math_71;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Math-71 \
	-failing org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest:org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters x:x \
	-dependencies /script/jGenProg_Defects4J_Math_71/target/classes/:/script/jGenProg_Defects4J_Math_71/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

