Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
log4j:ERROR setFile(null,true) call failed.
java.io.FileNotFoundException:  (No such file or directory)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(FileOutputStream.java:270)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:133)
	at org.apache.log4j.FileAppender.setFile(FileAppender.java:294)
	at org.apache.log4j.RollingFileAppender.setFile(RollingFileAppender.java:207)
	at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:165)
	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:307)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:172)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:104)
	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:842)
	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:768)
	at org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:672)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:516)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:580)
	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)
	at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)
	at org.apache.log4j.Logger.getLogger(Logger.java:117)
	at fr.inria.astor.core.setup.ConfigurationProperties.<clinit>(ConfigurationProperties.java:16)
	at fr.inria.main.AbstractMain.<clinit>(AbstractMain.java:99)
2019-09-30 05:34:04,189 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.7.0_181
2019-09-30 05:34:04,190 INFO main - Java version of the JDK used to run tests: 1.7.0_181
2019-09-30 05:34:04,190 INFO main - The compliance of the JVM is:  7
2019-09-30 05:34:04,192 INFO main - command line arguments: [-mode  jgenprog  -location  .  -id  Chart-26  -failing  org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests:org.jfree.chart.junit.AreaChartTests:org.jfree.chart.junit.StackedBarChart3DTests:org.jfree.chart.junit.StackedBarChartTests:org.jfree.chart.junit.StackedAreaChartTests:org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests:org.jfree.chart.junit.LineChart3DTests:org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests:org.jfree.chart.junit.GanttChartTests:org.jfree.chart.renderer.category.junit.LevelRendererTests:org.jfree.chart.renderer.category.junit.IntervalBarRendererTests:org.jfree.chart.junit.BarChart3DTests:org.jfree.chart.junit.BarChartTests:org.jfree.chart.junit.WaterfallChartTests:org.jfree.chart.renderer.category.junit.LayeredBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.junit.LineChartTests  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  4  -srcjavafolder  source/  -srctestfolder  tests/  -binjavafolder  build/  -bintestfolder  build-tests/  -parameters  x:x  -dependencies  /script/jGenProg_Defects4J_Chart_26/build/:/script/jGenProg_Defects4J_Chart_26/build-tests/:/script/jGenProg_Defects4J_Chart_26/lib/servlet.jar:/script/jGenProg_Defects4J_Chart_26/lib/junit.jar:/script/jGenProg_Defects4J_Chart_26/lib/itext-2.0.2.jar:/defects4j/framework/projects/lib/junit-4.11.jar]
2019-09-30 05:34:04,193 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:960) - Source folders: [/script/jGenProg_Defects4J_Chart_26/./source]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:979) - Source Test folders: [/script/jGenProg_Defects4J_Chart_26/./tests]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Chart_26/./output_astor/AstorMain-Chart-26//bin//default from 650 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Chart_26/./output_astor/AstorMain-Chart-26//bin//default, /script/jGenProg_Defects4J_Chart_26/build/, /script/jGenProg_Defects4J_Chart_26/build-tests/, /script/jGenProg_Defects4J_Chart_26/lib/servlet.jar, /script/jGenProg_Defects4J_Chart_26/lib/junit.jar, /script/jGenProg_Defects4J_Chart_26/lib/itext-2.0.2.jar, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.LineChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.AreaChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.BarChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.BarChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.GanttChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.GanttChartTests#testDrawWithNullInfo2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.LineChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.LineChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedAreaChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedBarChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedBarChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.WaterfallChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#test1654215
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#testSerialization3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#testSerialization4
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.LevelRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.IntervalBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.LayeredBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.LevelRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.BarChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedAreaChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.WaterfallChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.GanttChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.GanttChartTests#testDrawWithNullInfo2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedBarChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.LineChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.AreaChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.StackedBarChart3DTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.junit.BarChartTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.IntervalBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.LayeredBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests#testDrawWithNullInfo
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#test1654215
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#testSerialization3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.chart.plot.junit.CategoryPlotTests#testSerialization4
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:3191, fails: 44, GZoltar suspicious 18788, with positive susp 4262
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 3191
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 1000 with susp > 0.1, we consider: 1000
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:955) - Setting up the max to 205110 milliseconds (205 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:801) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Chart_26/./source
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /script/jGenProg_Defects4J_Chart_26/./source, compliance level: 4
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:80) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Chart_26/build/, /script/jGenProg_Defects4J_Chart_26/build-tests/, /script/jGenProg_Defects4J_Chart_26/lib/servlet.jar, /script/jGenProg_Defects4J_Chart_26/lib/junit.jar, /script/jGenProg_Defects4J_Chart_26/lib/itext-2.0.2.jar, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:836) - Number of CtTypes created: 555
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 1000,  952
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 952
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 952, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 44.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Chart_26/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 205110
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests:org.jfree.chart.junit.AreaChartTests:org.jfree.chart.junit.StackedBarChart3DTests:org.jfree.chart.junit.StackedBarChartTests:org.jfree.chart.junit.StackedAreaChartTests:org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests:org.jfree.chart.junit.LineChart3DTests:org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests:org.jfree.chart.junit.GanttChartTests:org.jfree.chart.renderer.category.junit.LevelRendererTests:org.jfree.chart.renderer.category.junit.IntervalBarRendererTests:org.jfree.chart.junit.BarChart3DTests:org.jfree.chart.junit.BarChartTests:org.jfree.chart.junit.WaterfallChartTests:org.jfree.chart.renderer.category.junit.LayeredBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.junit.LineChartTests
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Chart-26
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build-tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Chart_26/build/:/script/jGenProg_Defects4J_Chart_26/build-tests/:/script/jGenProg_Defects4J_Chart_26/lib/servlet.jar:/script/jGenProg_Defects4J_Chart_26/lib/junit.jar:/script/jGenProg_Defects4J_Chart_26/lib/itext-2.0.2.jar:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= source/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:359) - Error variant :126 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:449) - -Found Solution, child variant #140
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:359) - Error variant :140 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 199.746
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 70
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:186) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 140
 
time(sec)= 199
operation: RemoveOp
location= org.jfree.chart.axis.Axis
line= 1113
lineSuspiciousness= 0.699
lineSuspiciousness= 280
original statement= if (edge == org.jfree.chart.util.RectangleEdge.TOP) {
	java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
	getLabelAngle(), labelBounds.getCenterX(), 
	labelBounds.getCenterY());
	java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
	labelBounds = rotatedLabelBounds.getBounds2D();
	float w = ((float) (labelBounds.getWidth()));
	float h = ((float) (labelBounds.getHeight()));
	float labelx = ((float) (dataArea.getCenterX()));
	float labely = ((float) ((state.getCursor() - insets.getBottom()) - 
	(h / 2.0)));
	org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
	org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
	hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
	labely - (h / 2.0F), w, h);
	state.cursorUp((insets.getTop() + labelBounds.getHeight()) + 
	insets.getBottom());
} else
	if (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {
		java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
		getLabelAngle(), labelBounds.getCenterX(), 
		labelBounds.getCenterY());
		java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
		labelBounds = rotatedLabelBounds.getBounds2D();
		float w = ((float) (labelBounds.getWidth()));
		float h = ((float) (labelBounds.getHeight()));
		float labelx = ((float) (dataArea.getCenterX()));
		float labely = ((float) ((state.getCursor() + insets.getTop()) + 
		(h / 2.0)));
		org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
		org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
		hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
		labely - (h / 2.0F), w, h);
		state.cursorDown((insets.getTop() + labelBounds.getHeight()) + 
		insets.getBottom());
	} else
		if (edge == org.jfree.chart.util.RectangleEdge.LEFT) {
			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
			getLabelAngle() - (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), 
			labelBounds.getCenterY());
			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
			labelBounds = rotatedLabelBounds.getBounds2D();
			float w = ((float) (labelBounds.getWidth()));
			float h = ((float) (labelBounds.getHeight()));
			float labelx = ((float) ((state.getCursor() - insets.getRight()) - 
			(w / 2.0)));
			float labely = ((float) (dataArea.getCenterY()));
			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
			org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI / 2.0), 
			org.jfree.chart.text.TextAnchor.CENTER);
			hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
			labely - (h / 2.0F), w, h);
			state.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + 
			insets.getRight());
		} else
			if (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {

				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
				getLabelAngle() + (java.lang.Math.PI / 2.0), 
				labelBounds.getCenterX(), labelBounds.getCenterY());
				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
				labelBounds = rotatedLabelBounds.getBounds2D();
				float w = ((float) (labelBounds.getWidth()));
				float h = ((float) (labelBounds.getHeight()));
				float labelx = ((float) ((state.getCursor() + 
				insets.getLeft()) + (w / 2.0)));
				float labely = ((float) (dataArea.getY() + (dataArea.getHeight() / 
				2.0)));
				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
				org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI / 2.0), 
				org.jfree.chart.text.TextAnchor.CENTER);
				hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
				labely - (h / 2.0F), w, h);
				state.cursorRight((insets.getLeft() + labelBounds.getWidth()) + 
				insets.getRight());

			}
buggy kind= CtIfImpl|CtBlockImpl
fixed statement= 
generation= 70
ingredientScope= -
validation=|true|0|3191|[]|
diffpatch=--- /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
+++ /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
@@ -423,57 +423,6 @@
 		java.awt.FontMetrics fm = g2.getFontMetrics();
 		java.awt.geom.Rectangle2D labelBounds = org.jfree.chart.text.TextUtilities.getTextBounds(label, g2, fm);
 		java.awt.Shape hotspot = null;
-		if (edge == org.jfree.chart.util.RectangleEdge.TOP) {
-			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
-			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-			labelBounds = rotatedLabelBounds.getBounds2D();
-			float w = ((float) (labelBounds.getWidth()));
-			float h = ((float) (labelBounds.getHeight()));
-			float labelx = ((float) (dataArea.getCenterX()));
-			float labely = ((float) ((state.getCursor() - insets.getBottom()) - (h / 2.0)));
-			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-			hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), labely - (h / 2.0F), w, h);
-			state.cursorUp((insets.getTop() + labelBounds.getHeight()) + insets.getBottom());
-		} else
-			if (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {
-				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle(), labelBounds.getCenterX(), labelBounds.getCenterY());
-				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-				labelBounds = rotatedLabelBounds.getBounds2D();
-				float w = ((float) (labelBounds.getWidth()));
-				float h = ((float) (labelBounds.getHeight()));
-				float labelx = ((float) (dataArea.getCenterX()));
-				float labely = ((float) ((state.getCursor() + insets.getTop()) + (h / 2.0)));
-				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-				hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), labely - (h / 2.0F), w, h);
-				state.cursorDown((insets.getTop() + labelBounds.getHeight()) + insets.getBottom());
-			} else
-				if (edge == org.jfree.chart.util.RectangleEdge.LEFT) {
-					java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle() - (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), labelBounds.getCenterY());
-					java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-					labelBounds = rotatedLabelBounds.getBounds2D();
-					float w = ((float) (labelBounds.getWidth()));
-					float h = ((float) (labelBounds.getHeight()));
-					float labelx = ((float) ((state.getCursor() - insets.getRight()) - (w / 2.0)));
-					float labely = ((float) (dataArea.getCenterY()));
-					org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI / 2.0), org.jfree.chart.text.TextAnchor.CENTER);
-					hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), labely - (h / 2.0F), w, h);
-					state.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + insets.getRight());
-				} else
-					if (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {
-						java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(getLabelAngle() + (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), labelBounds.getCenterY());
-						java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-						labelBounds = rotatedLabelBounds.getBounds2D();
-						float w = ((float) (labelBounds.getWidth()));
-						float h = ((float) (labelBounds.getHeight()));
-						float labelx = ((float) ((state.getCursor() + insets.getLeft()) + (w / 2.0)));
-						float labely = ((float) (dataArea.getY() + (dataArea.getHeight() / 2.0)));
-						org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI / 2.0), org.jfree.chart.text.TextAnchor.CENTER);
-						hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), labely - (h / 2.0F), w, h);
-						state.cursorRight((insets.getLeft() + labelBounds.getWidth()) + insets.getRight());
-					}
-
-
-
 		if ((plotState != null) && (hotspot != null)) {
 			org.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();
 			org.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();


diffpatchoriginal=--- /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
+++ /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
@@ -1110,83 +1110,83 @@
 		java.awt.geom.Rectangle2D labelBounds = org.jfree.chart.text.TextUtilities.getTextBounds(label, g2, fm);
 		java.awt.Shape hotspot = null;
 
-		if (edge == org.jfree.chart.util.RectangleEdge.TOP) {
-			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-			getLabelAngle(), labelBounds.getCenterX(), 
-			labelBounds.getCenterY());
-			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-			labelBounds = rotatedLabelBounds.getBounds2D();
-			float w = ((float) (labelBounds.getWidth()));
-			float h = ((float) (labelBounds.getHeight()));
-			float labelx = ((float) (dataArea.getCenterX()));
-			float labely = ((float) ((state.getCursor() - insets.getBottom()) - 
-			(h / 2.0)));
-			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-			org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-			hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-			labely - (h / 2.0F), w, h);
-			state.cursorUp((insets.getTop() + labelBounds.getHeight()) + 
-			insets.getBottom());
-		} else
-			if (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {
-				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-				getLabelAngle(), labelBounds.getCenterX(), 
-				labelBounds.getCenterY());
-				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-				labelBounds = rotatedLabelBounds.getBounds2D();
-				float w = ((float) (labelBounds.getWidth()));
-				float h = ((float) (labelBounds.getHeight()));
-				float labelx = ((float) (dataArea.getCenterX()));
-				float labely = ((float) ((state.getCursor() + insets.getTop()) + 
-				(h / 2.0)));
-				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-				org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-				hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-				labely - (h / 2.0F), w, h);
-				state.cursorDown((insets.getTop() + labelBounds.getHeight()) + 
-				insets.getBottom());
-			} else
-				if (edge == org.jfree.chart.util.RectangleEdge.LEFT) {
-					java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-					getLabelAngle() - (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), 
-					labelBounds.getCenterY());
-					java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-					labelBounds = rotatedLabelBounds.getBounds2D();
-					float w = ((float) (labelBounds.getWidth()));
-					float h = ((float) (labelBounds.getHeight()));
-					float labelx = ((float) ((state.getCursor() - insets.getRight()) - 
-					(w / 2.0)));
-					float labely = ((float) (dataArea.getCenterY()));
-					org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-					org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI / 2.0), 
-					org.jfree.chart.text.TextAnchor.CENTER);
-					hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-					labely - (h / 2.0F), w, h);
-					state.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + 
-					insets.getRight());
-				} else
-					if (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {
-
-						java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-						getLabelAngle() + (java.lang.Math.PI / 2.0), 
-						labelBounds.getCenterX(), labelBounds.getCenterY());
-						java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-						labelBounds = rotatedLabelBounds.getBounds2D();
-						float w = ((float) (labelBounds.getWidth()));
-						float h = ((float) (labelBounds.getHeight()));
-						float labelx = ((float) ((state.getCursor() + 
-						insets.getLeft()) + (w / 2.0)));
-						float labely = ((float) (dataArea.getY() + (dataArea.getHeight() / 
-						2.0)));
-						org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-						org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI / 2.0), 
-						org.jfree.chart.text.TextAnchor.CENTER);
-						hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-						labely - (h / 2.0F), w, h);
-						state.cursorRight((insets.getLeft() + labelBounds.getWidth()) + 
-						insets.getRight());
 
-					}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 		if ((plotState != null) && (hotspot != null)) {
 			org.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();
 			org.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Chart-26
TOTAL_TIME=199.746
NR_GENERATIONS=70
NR_RIGHT_COMPILATIONS=47
NR_FAILLING_COMPILATIONS=23
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=140
TIME=199
VALIDATION=|true|0|3191|[]|
GENERATION=70
FOLDER_SOLUTION_CODE=/script/jGenProg_Defects4J_Chart_26/./output_astor/AstorMain-Chart-26//src//variant-140
--Patch Hunk #1
OPERATOR=RemoveOp

LOCATION=org.jfree.chart.axis.Axis

PATH=/script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axis.java

MODIFIED_FILE_PATH=/script/jGenProg_Defects4J_Chart_26/./output_astor/AstorMain-Chart-26//src//variant-140/org/jfree/chart/axis/Axis.java

LINE=1113

SUSPICIOUNESS=0.699

MP_RANKING=280

ORIGINAL_CODE=if (edge == org.jfree.chart.util.RectangleEdge.TOP) {
	java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
	getLabelAngle(), labelBounds.getCenterX(), 
	labelBounds.getCenterY());
	java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
	labelBounds = rotatedLabelBounds.getBounds2D();
	float w = ((float) (labelBounds.getWidth()));
	float h = ((float) (labelBounds.getHeight()));
	float labelx = ((float) (dataArea.getCenterX()));
	float labely = ((float) ((state.getCursor() - insets.getBottom()) - 
	(h / 2.0)));
	org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
	org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
	hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
	labely - (h / 2.0F), w, h);
	state.cursorUp((insets.getTop() + labelBounds.getHeight()) + 
	insets.getBottom());
} else
	if (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {
		java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
		getLabelAngle(), labelBounds.getCenterX(), 
		labelBounds.getCenterY());
		java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
		labelBounds = rotatedLabelBounds.getBounds2D();
		float w = ((float) (labelBounds.getWidth()));
		float h = ((float) (labelBounds.getHeight()));
		float labelx = ((float) (dataArea.getCenterX()));
		float labely = ((float) ((state.getCursor() + insets.getTop()) + 
		(h / 2.0)));
		org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
		org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
		hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
		labely - (h / 2.0F), w, h);
		state.cursorDown((insets.getTop() + labelBounds.getHeight()) + 
		insets.getBottom());
	} else
		if (edge == org.jfree.chart.util.RectangleEdge.LEFT) {
			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
			getLabelAngle() - (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), 
			labelBounds.getCenterY());
			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
			labelBounds = rotatedLabelBounds.getBounds2D();
			float w = ((float) (labelBounds.getWidth()));
			float h = ((float) (labelBounds.getHeight()));
			float labelx = ((float) ((state.getCursor() - insets.getRight()) - 
			(w / 2.0)));
			float labely = ((float) (dataArea.getCenterY()));
			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
			org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI / 2.0), 
			org.jfree.chart.text.TextAnchor.CENTER);
			hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
			labely - (h / 2.0F), w, h);
			state.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + 
			insets.getRight());
		} else
			if (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {

				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
				getLabelAngle() + (java.lang.Math.PI / 2.0), 
				labelBounds.getCenterX(), labelBounds.getCenterY());
				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
				labelBounds = rotatedLabelBounds.getBounds2D();
				float w = ((float) (labelBounds.getWidth()));
				float h = ((float) (labelBounds.getHeight()));
				float labelx = ((float) ((state.getCursor() + 
				insets.getLeft()) + (w / 2.0)));
				float labely = ((float) (dataArea.getY() + (dataArea.getHeight() / 
				2.0)));
				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
				org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI / 2.0), 
				org.jfree.chart.text.TextAnchor.CENTER);
				hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
				labely - (h / 2.0F), w, h);
				state.cursorRight((insets.getLeft() + labelBounds.getWidth()) + 
				insets.getRight());

			}

BUGGY_CODE_TYPE=CtIfImpl|CtBlockImpl

PATCH_HUNK_CODE=null

PATCH_HUNK_TYPE=null

INGREDIENT_SCOPE=-

INGREDIENT_PARENT=null

PATCH_DIFF_ORIG=--- /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
+++ /script/jGenProg_Defects4J_Chart_26/source/org/jfree/chart/axis/Axisjava
@@ -1110,83 +1110,83 @@
 		java.awt.geom.Rectangle2D labelBounds = org.jfree.chart.text.TextUtilities.getTextBounds(label, g2, fm);
 		java.awt.Shape hotspot = null;
 
-		if (edge == org.jfree.chart.util.RectangleEdge.TOP) {
-			java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-			getLabelAngle(), labelBounds.getCenterX(), 
-			labelBounds.getCenterY());
-			java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-			labelBounds = rotatedLabelBounds.getBounds2D();
-			float w = ((float) (labelBounds.getWidth()));
-			float h = ((float) (labelBounds.getHeight()));
-			float labelx = ((float) (dataArea.getCenterX()));
-			float labely = ((float) ((state.getCursor() - insets.getBottom()) - 
-			(h / 2.0)));
-			org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-			org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-			hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-			labely - (h / 2.0F), w, h);
-			state.cursorUp((insets.getTop() + labelBounds.getHeight()) + 
-			insets.getBottom());
-		} else
-			if (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {
-				java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-				getLabelAngle(), labelBounds.getCenterX(), 
-				labelBounds.getCenterY());
-				java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-				labelBounds = rotatedLabelBounds.getBounds2D();
-				float w = ((float) (labelBounds.getWidth()));
-				float h = ((float) (labelBounds.getHeight()));
-				float labelx = ((float) (dataArea.getCenterX()));
-				float labely = ((float) ((state.getCursor() + insets.getTop()) + 
-				(h / 2.0)));
-				org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-				org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);
-				hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-				labely - (h / 2.0F), w, h);
-				state.cursorDown((insets.getTop() + labelBounds.getHeight()) + 
-				insets.getBottom());
-			} else
-				if (edge == org.jfree.chart.util.RectangleEdge.LEFT) {
-					java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-					getLabelAngle() - (java.lang.Math.PI / 2.0), labelBounds.getCenterX(), 
-					labelBounds.getCenterY());
-					java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-					labelBounds = rotatedLabelBounds.getBounds2D();
-					float w = ((float) (labelBounds.getWidth()));
-					float h = ((float) (labelBounds.getHeight()));
-					float labelx = ((float) ((state.getCursor() - insets.getRight()) - 
-					(w / 2.0)));
-					float labely = ((float) (dataArea.getCenterY()));
-					org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-					org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI / 2.0), 
-					org.jfree.chart.text.TextAnchor.CENTER);
-					hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-					labely - (h / 2.0F), w, h);
-					state.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + 
-					insets.getRight());
-				} else
-					if (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {
-
-						java.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(
-						getLabelAngle() + (java.lang.Math.PI / 2.0), 
-						labelBounds.getCenterX(), labelBounds.getCenterY());
-						java.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-						labelBounds = rotatedLabelBounds.getBounds2D();
-						float w = ((float) (labelBounds.getWidth()));
-						float h = ((float) (labelBounds.getHeight()));
-						float labelx = ((float) ((state.getCursor() + 
-						insets.getLeft()) + (w / 2.0)));
-						float labely = ((float) (dataArea.getY() + (dataArea.getHeight() / 
-						2.0)));
-						org.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-						org.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI / 2.0), 
-						org.jfree.chart.text.TextAnchor.CENTER);
-						hotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w / 2.0F), 
-						labely - (h / 2.0F), w, h);
-						state.cursorRight((insets.getLeft() + labelBounds.getWidth()) + 
-						insets.getRight());
 
-					}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 		if ((plotState != null) && (hotspot != null)) {
 			org.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();
 			org.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 1465.038


Node: bcce28965ba6



Date: Mon Sep 30 05:58:29 EDT 2019

cd /script/jGenProg_Defects4J_Chart_26;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Chart-26 \
	-failing org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests:org.jfree.chart.junit.AreaChartTests:org.jfree.chart.junit.StackedBarChart3DTests:org.jfree.chart.junit.StackedBarChartTests:org.jfree.chart.junit.StackedAreaChartTests:org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests:org.jfree.chart.junit.LineChart3DTests:org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests:org.jfree.chart.junit.GanttChartTests:org.jfree.chart.renderer.category.junit.LevelRendererTests:org.jfree.chart.renderer.category.junit.IntervalBarRendererTests:org.jfree.chart.junit.BarChart3DTests:org.jfree.chart.junit.BarChartTests:org.jfree.chart.junit.WaterfallChartTests:org.jfree.chart.renderer.category.junit.LayeredBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests:org.jfree.chart.plot.junit.CategoryPlotTests:org.jfree.chart.junit.LineChartTests \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 4 \
	-srcjavafolder source/ \
	-srctestfolder tests/ \
	-binjavafolder build/ \
	-bintestfolder build-tests/ \
	-parameters x:x \
	-dependencies /script/jGenProg_Defects4J_Chart_26/build/:/script/jGenProg_Defects4J_Chart_26/build-tests/:/script/jGenProg_Defects4J_Chart_26/lib/servlet.jar:/script/jGenProg_Defects4J_Chart_26/lib/junit.jar:/script/jGenProg_Defects4J_Chart_26/lib/itext-2.0.2.jar:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

