Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO] 01:54:51,622 fr.inria.astor.core.setup.ProjectConfiguration:282 - Version of the JVM used: 1.7.0_181
[INFO] 01:54:51,627 main:381 - Java version of the JDK used to run tests: 1.7.0_181
[INFO] 01:54:51,628 main:382 - The compliance of the JVM is:  7
[INFO] 01:54:51,630 main:660 - command line arguments: [-mode  jgenprog  -location  .  -id  Chart-2  -failing  org.jfree.data.general.junit.DatasetUtilitiesTests  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  4  -srcjavafolder  source/  -srctestfolder  tests/  -binjavafolder  build/  -bintestfolder  build-tests/  -parameters  mode:leven  -dependencies  /script/jGenProg_Defects4J_Chart_2/build/:/script/jGenProg_Defects4J_Chart_2/build-tests/:/script/jGenProg_Defects4J_Chart_2/lib/junit.jar:/script/jGenProg_Defects4J_Chart_2/lib/iText-2.1.4.jar:/script/jGenProg_Defects4J_Chart_2/lib/servlet.jar:/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO] 01:54:51,637 fr.inria.main.evolution.AstorMain:224 - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:975) - Source folders: [/script/jGenProg_Defects4J_Chart_2/./source]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:994) - Source Test folders: [/script/jGenProg_Defects4J_Chart_2/./tests]
[INFO ] fr.inria.main.evolution.AstorMain.createEngine(AstorMain.java:104) - mode is Leven
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.resolveTestsToRun(AstorCoreEngine.java:1311) - Test retrieved from classes: 764
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Chart_2/./output_astor/AstorMain-Chart-2//bin//default from 764 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Chart_2/./output_astor/AstorMain-Chart-2//bin//default, /script/jGenProg_Defects4J_Chart_2/build/, /script/jGenProg_Defects4J_Chart_2/build-tests/, /script/jGenProg_Defects4J_Chart_2/lib/junit.jar, /script/jGenProg_Defects4J_Chart_2/lib/iText-2.1.4.jar, /script/jGenProg_Defects4J_Chart_2/lib/servlet.jar, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.data.general.junit.DatasetUtilitiesTests#testBug2849731_2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.data.general.junit.DatasetUtilitiesTests#testBug2849731_3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.data.general.junit.DatasetUtilitiesTests#testBug2849731_2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.jfree.data.general.junit.DatasetUtilitiesTests#testBug2849731_3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:4398, fails: 4, GZoltar suspicious 25222, with positive susp 103
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 4398
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 92 with susp > 0.1, we consider: 92
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:898) - Setting up the max to 447480 milliseconds (447 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:240) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Chart_2/./source
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:68) - building model: /script/jGenProg_Defects4J_Chart_2/./source, compliance level: 4
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:82) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Chart_2/build/, /script/jGenProg_Defects4J_Chart_2/build-tests/, /script/jGenProg_Defects4J_Chart_2/lib/junit.jar, /script/jGenProg_Defects4J_Chart_2/lib/iText-2.1.4.jar, /script/jGenProg_Defects4J_Chart_2/lib/servlet.jar, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:779) - Number of CtTypes created: 656
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 92
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 92,  84
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 84
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 84, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 4.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Chart_2/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 447480
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.jfree.data.general.junit.DatasetUtilitiesTests
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Chart-2
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build-tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= leven
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Chart_2/build/:/script/jGenProg_Defects4J_Chart_2/build-tests/:/script/jGenProg_Defects4J_Chart_2/lib/junit.jar:/script/jGenProg_Defects4J_Chart_2/lib/iText-2.1.4.jar:/script/jGenProg_Defects4J_Chart_2/lib/servlet.jar:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= source/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#getGroup
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#getGroup
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#hasListener
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#hasListener
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#clone
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractDataset#clone
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractSeriesDataset#indexOf
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractSeriesDataset#indexOf
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractSeriesDataset#indexOf
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractSeriesDataset#indexOf
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetAndSelection#getDataset
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetAndSelection#getDataset
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetAndSelection#getSelection
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetAndSelection#getSelection
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#getID
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#getID
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#clone
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#clone
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetGroup#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#calculatePieDatasetTotal
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#calculatePieDatasetTotal
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForRow
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForRow
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForRow
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForRow
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForColumn
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createPieDatasetForColumn
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createConsolidatedPieDataset
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#createConsolidatedPieDataset
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#sampleFunction2D
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#sampleFunction2D
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#sampleFunction2DToSeries
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#sampleFunction2DToSeries
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateDomainBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateCategoryRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateCategoryRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateXYRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#iterateXYRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumDomainValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumDomainValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumDomainValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumDomainValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMinimumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findMaximumRangeValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findStackedRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#findStackedRangeBounds
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#calculateStackTotal
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DatasetUtilities#calculateStackTotal
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getXSampleCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getXSampleCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getYSampleCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getYSampleCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMinimumXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMinimumXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMaximumXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMaximumXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMinimumYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMinimumYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMaximumYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getMaximumYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getXValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getYValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getZValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getZValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getZ
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultHeatMapDataset#getZ
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultKeyedValueDataset#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultKeyedValueDataset#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#getValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#getValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#equals
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: DefaultValueDataset#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: HeatMapUtilities#createHeatMapImage
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: HeatMapUtilities#createHeatMapImage
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getKey
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getKey
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getDescription
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getDescription
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getNotify
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#getNotify
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#isEmpty
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: Series#isEmpty
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getChangeType
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getChangeType
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getIndex1
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getIndex1
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getIndex2
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeInfo#getIndex2
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeType#toString
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeType#toString
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeType#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: SeriesChangeType#hashCode
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getUniqueValueCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getUniqueValueCount
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getUniqueValues
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getUniqueValues
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMinValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMinValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxChipX
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxChipX
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxChipY
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getMaxChipY
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipSpace
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: WaferMapDataset#getChipSpace
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.iterateDomainBounds(dataset, true):return org.jfree.data.general.DatasetUtilities.iterateDomainBounds(dataset, true)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.group:return this.group
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return list.contains(listener):return list.contains(listener)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return clone:return clone
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return collection:return collection
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval):return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(info.getDomainLowerBound(true)):return new java.lang.Double(info.getDomainLowerBound(true))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.index2:return this.index2
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return getChipValue(new java.lang.Integer(chipx), new java.lang.Integer(chipy)):return getChipValue(new java.lang.Integer(chipx), new java.lang.Integer(chipy))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(maximum):return new java.lang.Double(maximum)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.xSamples:return this.xSamples
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.data.getValue(rowIndex, colIndex):return this.data.getValue(rowIndex, colIndex)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(info.getRangeUpperBound(true)):return new java.lang.Double(info.getRangeUpperBound(true))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return series:return series
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.value != null ? this.value.hashCode() : 0:return this.value != null ? this.value.hashCode() : 0
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.name:return this.name
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn(dataset, column):return org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn(dataset, column)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, true):return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, true)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return s:return s
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(minimum):return new java.lang.Double(minimum)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.zValues[xIndex][yIndex]:return this.zValues[xIndex][yIndex]
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return unique:return unique
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true):return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.chart.util.ObjectUtilities.equal(this.value, vd.getValue()):return org.jfree.chart.util.ObjectUtilities.equal(this.value, vd.getValue())
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(dataset, 0.0):return org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(dataset, 0.0)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return totalValue:return totalValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.minX:return this.minX
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return getUniqueValues().size():return getUniqueValues().size()
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return total:return total
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.maxChipX:return this.maxChipX
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new org.jfree.data.Range(minimum, maximum):return new org.jfree.data.Range(minimum, maximum)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return -1:return -1
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return y:return y
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.name.hashCode():return this.name.hashCode()
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(info.getDomainUpperBound(true)):return new java.lang.Double(info.getDomainUpperBound(true))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.minY:return this.minY
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.dataset:return this.dataset
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.key:return this.key
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.createConsolidatedPieDataset(source, key, 
minimumPercent, 2):return org.jfree.data.general.DatasetUtilities.createConsolidatedPieDataset(source, key, 
minimumPercent, 2)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.selection:return this.selection
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.maxX:return this.maxX
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return false:return false
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.createPieDatasetForRow(dataset, row):return org.jfree.data.general.DatasetUtilities.createPieDatasetForRow(dataset, row)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.ySamples:return this.ySamples
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.findDomainBounds(dataset, true):return org.jfree.data.general.DatasetUtilities.findDomainBounds(dataset, true)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.id:return this.id
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return super.clone():return super.clone()
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return getItemCount() == 0:return getItemCount() == 0
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.minValue:return this.minValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return true:return true
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return result:return result
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.description:return this.description
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.index1:return this.index1
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.notify:return this.notify
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.value:return this.value
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.changeType:return this.changeType
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.chipSpace:return this.chipSpace
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.maxChipY:return this.maxChipY
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(info.getRangeLowerBound(true)):return new java.lang.Double(info.getRangeLowerBound(true))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return new java.lang.Double(getZValue(xIndex, yIndex)):return new java.lang.Double(getZValue(xIndex, yIndex))
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.maxValue:return this.maxValue
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return image:return image
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return null:return null
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset):return org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset)
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.maxY:return this.maxY
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return x:return x
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:67) - return this.data != null ? this.data.hashCode() : 0:return this.data != null ? this.data.hashCode() : 0
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:68) - ----------------------
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: XYIntervalSeriesCollection#getSeries
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: XYIntervalSeriesCollection#getSeries
[INFO ] fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getScopeID(LevenSearchStrategy.java:140) - scopeID: AbstractIntervalXYDataset#getStartXValue
[ERROR] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:84) - Error at generation 2
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for result(class spoon.support.reflect.code.CtLocalVariableImpl) (/script/jGenProg_Defects4J_Chart_2/source/org/jfree/data/xy/AbstractIntervalXYDataset.java:64)
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for result(class spoon.support.reflect.code.CtLocalVariableImpl) (/script/jGenProg_Defects4J_Chart_2/source/org/jfree/data/xy/AbstractIntervalXYDataset.java:64)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:363)
	at spoon.reflect.visitor.filter.SiblingsFunction.apply(SiblingsFunction.java:58)
	at spoon.reflect.visitor.filter.SiblingsFunction.apply(SiblingsFunction.java:23)
	at spoon.reflect.visitor.chain.CtQueryImpl$LazyFunctionWrapper._accept(CtQueryImpl.java:492)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:307)
	at spoon.reflect.visitor.chain.CtQueryImpl.forEach(CtQueryImpl.java:93)
	at spoon.reflect.visitor.filter.LocalVariableScopeFunction.apply(LocalVariableScopeFunction.java:55)
	at spoon.reflect.visitor.filter.LocalVariableScopeFunction.apply(LocalVariableScopeFunction.java:32)
	at spoon.reflect.visitor.chain.CtQueryImpl$LazyFunctionWrapper._accept(CtQueryImpl.java:492)
	at spoon.reflect.visitor.chain.CtQueryImpl$AbstractStep.accept(CtQueryImpl.java:307)
	at spoon.reflect.visitor.chain.CtQueryImpl.first(CtQueryImpl.java:136)
	at spoon.reflect.visitor.chain.CtQueryImpl.first(CtQueryImpl.java:119)
	at spoon.refactoring.CtRenameLocalVariableRefactoring.detectNameConflicts(CtRenameLocalVariableRefactoring.java:235)
	at spoon.refactoring.AbstractRenameRefactoring.detectIssues(AbstractRenameRefactoring.java:45)
	at spoon.refactoring.AbstractRenameRefactoring.refactor(AbstractRenameRefactoring.java:37)
	at fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getNormalizedElement(LevenSearchStrategy.java:166)
	at fr.inria.astor.approaches.levenshtein.LevenSearchStrategy.getFixIngredient(LevenSearchStrategy.java:62)
	at fr.inria.astor.core.ingredientbased.IngredientBasedEvolutionaryRepairApproachImpl.createOperatorInstanceForPoint(IngredientBasedEvolutionaryRepairApproachImpl.java:95)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.modifyProgramVariant(EvolutionarySearchEngine.java:264)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.createNewProgramVariant(EvolutionarySearchEngine.java:198)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.processGenerations(EvolutionarySearchEngine.java:146)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:68)
	at fr.inria.main.evolution.AstorMain.run(AstorMain.java:203)
	at fr.inria.main.evolution.AstorMain.execute(AstorMain.java:247)
	at fr.inria.main.evolution.AstorMain.main(AstorMain.java:218)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 1.777
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 2
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:257) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:208) - Time Total(s): 191.071


Node: d4c9e13232ce



Date: Tue Nov 12 01:58:03 EST 2019

cd /script/jGenProg_Defects4J_Chart_2;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Chart-2 \
	-failing org.jfree.data.general.junit.DatasetUtilitiesTests \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 4 \
	-srcjavafolder source/ \
	-srctestfolder tests/ \
	-binjavafolder build/ \
	-bintestfolder build-tests/ \
	-parameters mode:leven \
	-dependencies /script/jGenProg_Defects4J_Chart_2/build/:/script/jGenProg_Defects4J_Chart_2/build-tests/:/script/jGenProg_Defects4J_Chart_2/lib/junit.jar:/script/jGenProg_Defects4J_Chart_2/lib/iText-2.1.4.jar:/script/jGenProg_Defects4J_Chart_2/lib/servlet.jar:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

