Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2019-07-05 22:36:23,965 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.7.0_181
2019-07-05 22:36:23,968 INFO main - Java version of the JDK used to run tests: 1.7.0_181
2019-07-05 22:36:23,968 INFO main - The compliance of the JVM is:  7
2019-07-05 22:36:23,971 INFO main - command line arguments: [-mode  jgenprog  -location  .  -id  Closure-109  -failing  com.google.javascript.jscomp.parsing.JsDocInfoParserTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  6  -srcjavafolder  src/  -srctestfolder  test  -binjavafolder  build/classes/  -bintestfolder  build/test/  -parameters  x:x  -dependencies  /script/jGenProg_Defects4J_Closure_109/build/classes:/script/jGenProg_Defects4J_Closure_109/build/test:/script/jGenProg_Defects4J_Closure_109/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant.jar:/script/jGenProg_Defects4J_Closure_109/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_109/lib/guava.jar:/script/jGenProg_Defects4J_Closure_109/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_109/lib/json.jar:/script/jGenProg_Defects4J_Closure_109/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_109/lib/junit.jar:/script/jGenProg_Defects4J_Closure_109/lib/mockito-core.jar:/script/jGenProg_Defects4J_Closure_109/lib/objenesis.jar:/script/jGenProg_Defects4J_Closure_109/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_109/lib/args4j.jar]
2019-07-05 22:36:23,973 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:849) - Source folders: [/script/jGenProg_Defects4J_Closure_109/./src]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:868) - Source Test folders: [/script/jGenProg_Defects4J_Closure_109/./test]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Closure_109/./output_astor/AstorMain-Closure-109//bin//default from 470 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Closure_109/./output_astor/AstorMain-Closure-109//bin//default, /script/jGenProg_Defects4J_Closure_109/build/classes/, /script/jGenProg_Defects4J_Closure_109/build/test/, /script/jGenProg_Defects4J_Closure_109/build/lib/rhino.jar, /script/jGenProg_Defects4J_Closure_109/lib/ant-launcher.jar, /script/jGenProg_Defects4J_Closure_109/lib/ant.jar, /script/jGenProg_Defects4J_Closure_109/lib/caja-r4314.jar, /script/jGenProg_Defects4J_Closure_109/lib/guava.jar, /script/jGenProg_Defects4J_Closure_109/lib/jarjar.jar, /script/jGenProg_Defects4J_Closure_109/lib/json.jar, /script/jGenProg_Defects4J_Closure_109/lib/jsr305.jar, /script/jGenProg_Defects4J_Closure_109/lib/junit.jar, /script/jGenProg_Defects4J_Closure_109/lib/mockito-core.jar, /script/jGenProg_Defects4J_Closure_109/lib/objenesis.jar, /script/jGenProg_Defects4J_Closure_109/lib/protobuf-java.jar, /script/jGenProg_Defects4J_Closure_109/lib/args4j.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.parsing.JsDocInfoParserTest#testStructuralConstructor2
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.parsing.JsDocInfoParserTest#testStructuralConstructor3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:8391, fails: 4, GZoltar suspicious 49348, with positive susp 4307
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 8391
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 210 with susp > 0.1, we consider: 210
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:788) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Closure_109/./src
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /script/jGenProg_Defects4J_Closure_109/./src, compliance level: 6
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:79) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Closure_109/build/classes/, /script/jGenProg_Defects4J_Closure_109/build/test/, /script/jGenProg_Defects4J_Closure_109/build/lib/rhino.jar, /script/jGenProg_Defects4J_Closure_109/lib/ant-launcher.jar, /script/jGenProg_Defects4J_Closure_109/lib/ant.jar, /script/jGenProg_Defects4J_Closure_109/lib/caja-r4314.jar, /script/jGenProg_Defects4J_Closure_109/lib/guava.jar, /script/jGenProg_Defects4J_Closure_109/lib/jarjar.jar, /script/jGenProg_Defects4J_Closure_109/lib/json.jar, /script/jGenProg_Defects4J_Closure_109/lib/jsr305.jar, /script/jGenProg_Defects4J_Closure_109/lib/junit.jar, /script/jGenProg_Defects4J_Closure_109/lib/mockito-core.jar, /script/jGenProg_Defects4J_Closure_109/lib/objenesis.jar, /script/jGenProg_Defects4J_Closure_109/lib/protobuf-java.jar, /script/jGenProg_Defects4J_Closure_109/lib/args4j.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 210
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.jscomp.CompilerTestCase, methodName=createModuleChain([Ljava/lang/String;)[Lcom/google/javascript/jscomp/JSModule;, lineNumber=1087, susp=0.1203858530857692]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.jscomp.CompilerTestCase, methodName=test([Lcom/google/javascript/jscomp/JSModule;[Ljava/lang/String;)V, lineNumber=557, susp=0.10259783520851541]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.jscomp.CompilerTestCase, methodName=test([Lcom/google/javascript/jscomp/JSModule;[Ljava/lang/String;Lcom/google/javascript/jscomp/DiagnosticType;)V, lineNumber=570, susp=0.10259783520851541]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.rhino.head.Parser, methodName=checkActivationName(Ljava/lang/String;I)V, lineNumber=3345, susp=0.10153461651336192]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.rhino.head.Parser, methodName=checkActivationName(Ljava/lang/String;I)V, lineNumber=3355, susp=0.10153461651336192]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 210,  179
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 179
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 179, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Closure_109/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 62894
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= test
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= com.google.javascript.jscomp.parsing.JsDocInfoParserTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 6
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Closure-109
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build/test/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Closure_109/build/classes:/script/jGenProg_Defects4J_Closure_109/build/test:/script/jGenProg_Defects4J_Closure_109/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant.jar:/script/jGenProg_Defects4J_Closure_109/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_109/lib/guava.jar:/script/jGenProg_Defects4J_Closure_109/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_109/lib/json.jar:/script/jGenProg_Defects4J_Closure_109/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_109/lib/junit.jar:/script/jGenProg_Defects4J_Closure_109/lib/mockito-core.jar:/script/jGenProg_Defects4J_Closure_109/lib/objenesis.jar:/script/jGenProg_Defects4J_Closure_109/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_109/lib/args4j.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:436) - -Found Solution, child variant #1068
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:346) - Error variant :1068 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 5308.423
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 534
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 1068
 
time(sec)= 5308
operation: ReplaceOp
location= com.google.javascript.jscomp.parsing.JsDocInfoParser
line= 1949
lineSuspiciousness= 0.707
lineSuspiciousness= 0
original statement= return reportGenericTypeSyntaxWarning()
buggy kind= CtReturnImpl|CtBlockImpl
fixed statement= return newNode(com.google.javascript.rhino.Token.EMPTY)
Patch kind= CtReturnImpl|CtBlockImpl
generation= 534
ingredientScope= LOCAL
validation=|true|0|8412|[]|
diffpatch=--- /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
+++ /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
@@ -1286,7 +1286,7 @@
 
 	private com.google.javascript.rhino.Node parseTypeName(com.google.javascript.jscomp.parsing.JsDocToken token) {
 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-			return reportGenericTypeSyntaxWarning();
+			return newNode(com.google.javascript.rhino.Token.EMPTY);
 		}
 		java.lang.String typeName = stream.getString();
 		int lineno = stream.getLineno();


diffpatchoriginal=--- /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
+++ /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
@@ -1946,117 +1946,26 @@
 
 	private com.google.javascript.rhino.Node parseTypeName(com.google.javascript.jscomp.parsing.JsDocToken token) {
 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-			return reportGenericTypeSyntaxWarning();
-		}
 
-		java.lang.String typeName = stream.getString();
-		int lineno = stream.getLineno();
-		int charno = stream.getCharno();
-		while ((match(com.google.javascript.jscomp.parsing.JsDocToken.EOL)) && 
-		((typeName.charAt(((typeName.length()) - 1))) == '.')) {
-			skipEOLs();
-			if (match(com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-				next();
-				typeName += stream.getString();
-			}
-		} 
 
-		com.google.javascript.rhino.Node typeNameNode = newStringNode(typeName, lineno, charno);
 
-		if (match(com.google.javascript.jscomp.parsing.JsDocToken.LT)) {
-			next();
-			skipEOLs();
-			com.google.javascript.rhino.Node memberType = parseTypeExpressionList(next());
-			if (memberType != null) {
-				typeNameNode.addChildToFront(memberType);
-
-				skipEOLs();
-				if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.GT))) {
-					return reportTypeSyntaxWarning("msg.jsdoc.missing.gt");
-				}
 
-				next();
-			}
-		}
-		return typeNameNode;
-	}
 
 
 
 
 
 
-	private com.google.javascript.rhino.Node parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken token) {
 
 
-		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.LP)) {
-			restoreLookAhead(token);
-			return reportTypeSyntaxWarning("msg.jsdoc.missing.lp");
-		}
 
-		com.google.javascript.rhino.Node functionType = newNode(com.google.javascript.rhino.Token.FUNCTION);
-		com.google.javascript.rhino.Node parameters = null;
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) {
-			token = next();
 
-			boolean hasParams = true;
-			if (token == (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-				java.lang.String tokenStr = stream.getString();
-				boolean isThis = "this".equals(tokenStr);
-				boolean isNew = "new".equals(tokenStr);
-				if (isThis || isNew) {
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COLON)) {
-						next();
-						skipEOLs();
-						com.google.javascript.rhino.Node contextType = wrapNode(
-						(isThis ? com.google.javascript.rhino.Token.THIS : com.google.javascript.rhino.Token.NEW), 
-						parseContextTypeExpression(next()));
-						if (contextType == null) {
-							return null;
-						}
 
-						functionType.addChildToFront(contextType);
-					}else {
-						return reportTypeSyntaxWarning("msg.jsdoc.missing.colon");
-					}
 
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA)) {
-						next();
-						skipEOLs();
-						token = next();
-					}else {
-						hasParams = false;
-					}
-				}
-			}
 
-			if (hasParams) {
-				parameters = parseParametersType(token);
-				if (parameters == null) {
-					return null;
-				}
-			}
-		}
 
-		if (parameters != null) {
-			functionType.addChildToBack(parameters);
-		}
 
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) {
-			return reportTypeSyntaxWarning("msg.jsdoc.missing.rp");
-		}
 
-		skipEOLs();
-		com.google.javascript.rhino.Node resultType = parseResultType(next());
-		if (resultType == null) {
-			return null;
-		}else {
-			functionType.addChildToBack(resultType);
-		}
-		return functionType;
-	}
 
 
 
@@ -2080,79 +1989,170 @@
 
 
 
-	private com.google.javascript.rhino.Node parseParametersType(com.google.javascript.jscomp.parsing.JsDocToken token) {
-		com.google.javascript.rhino.Node paramsType = newNode(com.google.javascript.rhino.Token.PARAM_LIST);
-		boolean isVarArgs = false;
-		com.google.javascript.rhino.Node paramType = null;
-		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.RP)) {
-			do {
-				if (paramType != null) {
 
-					next();
-					skipEOLs();
-					token = next();
-				}
 
-				if (token == (com.google.javascript.jscomp.parsing.JsDocToken.ELLIPSIS)) {
 
 
 
-					skipEOLs();
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.RP)) {
-						paramType = newNode(com.google.javascript.rhino.Token.ELLIPSIS);
-					}else {
-						skipEOLs();
-						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.LB))) {
-							return reportTypeSyntaxWarning("msg.jsdoc.missing.lb");
-						}
 
-						next();
-						skipEOLs();
-						paramType = wrapNode(com.google.javascript.rhino.Token.ELLIPSIS, parseTypeExpression(next()));
-						skipEOLs();
-						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RB))) {
-							return reportTypeSyntaxWarning("msg.jsdoc.missing.rb");
-						}
-						skipEOLs();
-						next();
-					}
 
-					isVarArgs = true;
-				}else {
-					paramType = parseTypeExpression(token);
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.EQUALS)) {
-						skipEOLs();
-						next();
-						paramType = wrapNode(com.google.javascript.rhino.Token.EQUALS, paramType);
-					}
-				}
 
-				if (paramType == null) {
-					return null;
-				}
-				paramsType.addChildToBack(paramType);
-				if (isVarArgs) {
-					break;
-				}
-			} while (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA) );
-		}
 
-		if (isVarArgs && (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA))) {
-			return reportTypeSyntaxWarning("msg.jsdoc.function.varargs");
-		}
 
 
 
-		return paramsType;
-	}
 
 
 
 
-	private com.google.javascript.rhino.Node parseResultType(com.google.javascript.jscomp.parsing.JsDocToken token) {
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.COLON))) {
-			return newNode(com.google.javascript.rhino.Token.EMPTY);
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+			return newNode(com.google.javascript.rhino.Token.EMPTY);} 		java.lang.String typeName = stream.getString(); 		int lineno = stream.getLineno(); 		int charno = stream.getCharno(); 		while ((match(com.google.javascript.jscomp.parsing.JsDocToken.EOL)) && ((typeName.charAt(((typeName.length()) - 1))) == '.')) { 			skipEOLs(); 			if (match(com.google.javascript.jscomp.parsing.JsDocToken.STRING)) { 				next(); 				typeName += stream.getString();}} 		com.google.javascript.rhino.Node typeNameNode = newStringNode(typeName, lineno, charno); 		if (match(com.google.javascript.jscomp.parsing.JsDocToken.LT)) { 			next(); 			skipEOLs(); 			com.google.javascript.rhino.Node memberType = parseTypeExpressionList(next()); 			if (memberType != null) { 				typeNameNode.addChildToFront(memberType); 				skipEOLs(); 				if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.GT))) { 					return reportTypeSyntaxWarning("msg.jsdoc.missing.gt");} 				next();}} 		return typeNameNode;} 	private com.google.javascript.rhino.Node parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.LP)) { 			restoreLookAhead(token); 			return reportTypeSyntaxWarning("msg.jsdoc.missing.lp");} 		com.google.javascript.rhino.Node functionType = newNode(com.google.javascript.rhino.Token.FUNCTION); 		com.google.javascript.rhino.Node parameters = null; 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) { 			token = next(); 			boolean hasParams = true; 			if (token == (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) { 				java.lang.String tokenStr = stream.getString(); 				boolean isThis = "this".equals(tokenStr); 				boolean isNew = "new".equals(tokenStr); 				if (isThis || isNew) { 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COLON)) { 						next(); 						skipEOLs(); 						com.google.javascript.rhino.Node contextType = wrapNode((isThis ? com.google.javascript.rhino.Token.THIS : com.google.javascript.rhino.Token.NEW), parseContextTypeExpression(next())); 						if (contextType == null) { 							return null;} 						functionType.addChildToFront(contextType);}else { 						return reportTypeSyntaxWarning("msg.jsdoc.missing.colon");} 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA)) { 						next(); 						skipEOLs(); 						token = next();}else { 						hasParams = false;}}} 			if (hasParams) { 				parameters = parseParametersType(token); 				if (parameters == null) { 					return null;}}} 		if (parameters != null) { 			functionType.addChildToBack(parameters);} 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) { 			return reportTypeSyntaxWarning("msg.jsdoc.missing.rp");} 		skipEOLs(); 		com.google.javascript.rhino.Node resultType = parseResultType(next()); 		if (resultType == null) { 			return null;}else { 			functionType.addChildToBack(resultType);} 		return functionType;} 	private com.google.javascript.rhino.Node parseParametersType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		com.google.javascript.rhino.Node paramsType = newNode(com.google.javascript.rhino.Token.PARAM_LIST); 		boolean isVarArgs = false; 		com.google.javascript.rhino.Node paramType = null; 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.RP)) { 			do { 				if (paramType != null) { 					next(); 					skipEOLs(); 					token = next();} 				if (token == (com.google.javascript.jscomp.parsing.JsDocToken.ELLIPSIS)) { 					skipEOLs(); 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.RP)) { 						paramType = newNode(com.google.javascript.rhino.Token.ELLIPSIS);}else { 						skipEOLs(); 						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.LB))) { 							return reportTypeSyntaxWarning("msg.jsdoc.missing.lb");} 						next(); 						skipEOLs(); 						paramType = wrapNode(com.google.javascript.rhino.Token.ELLIPSIS, parseTypeExpression(next())); 						skipEOLs(); 						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RB))) { 							return reportTypeSyntaxWarning("msg.jsdoc.missing.rb");} 						skipEOLs(); 						next();} 					isVarArgs = true;}else { 					paramType = parseTypeExpression(token); 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.EQUALS)) { 						skipEOLs(); 						next(); 						paramType = wrapNode(com.google.javascript.rhino.Token.EQUALS, paramType);}} 				if (paramType == null) { 					return null;} 				paramsType.addChildToBack(paramType); 				if (isVarArgs) { 					break;}} while (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA) );} 		if (isVarArgs && (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA))) { 			return reportTypeSyntaxWarning("msg.jsdoc.function.varargs");} 		return paramsType;} 	private com.google.javascript.rhino.Node parseResultType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.COLON))) { 			return newNode(com.google.javascript.rhino.Token.EMPTY);
 		}
 
 		token = next();



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Closure-109
TOTAL_TIME=5308.423
NR_GENERATIONS=534
NR_RIGHT_COMPILATIONS=372
NR_FAILLING_COMPILATIONS=162
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=1068
TIME=5308
VALIDATION=|true|0|8412|[]|
GENERATION=534
FOLDER_SOLUTION_CODE=/script/jGenProg_Defects4J_Closure_109/./output_astor/AstorMain-Closure-109//src//variant-1068
--Patch Hunk #1
OPERATOR=ReplaceOp

LOCATION=com.google.javascript.jscomp.parsing.JsDocInfoParser

PATH=/script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

MODIFIED_FILE_PATH=/script/jGenProg_Defects4J_Closure_109/./output_astor/AstorMain-Closure-109//src//variant-1068/com/google/javascript/jscomp/parsing/JsDocInfoParser.java

LINE=1949

SUSPICIOUNESS=0.707

MP_RANKING=0

ORIGINAL_CODE=return reportGenericTypeSyntaxWarning()

BUGGY_CODE_TYPE=CtReturnImpl|CtBlockImpl

PATCH_HUNK_CODE=return newNode(com.google.javascript.rhino.Token.EMPTY)

PATCH_HUNK_TYPE=CtReturnImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=return newNode(com.google.javascript.rhino.Token.EMPTY)

PATCH_DIFF_ORIG=--- /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
+++ /script/jGenProg_Defects4J_Closure_109/src/com/google/javascript/jscomp/parsing/JsDocInfoParserjava
@@ -1946,117 +1946,26 @@
 
 	private com.google.javascript.rhino.Node parseTypeName(com.google.javascript.jscomp.parsing.JsDocToken token) {
 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-			return reportGenericTypeSyntaxWarning();
-		}
 
-		java.lang.String typeName = stream.getString();
-		int lineno = stream.getLineno();
-		int charno = stream.getCharno();
-		while ((match(com.google.javascript.jscomp.parsing.JsDocToken.EOL)) && 
-		((typeName.charAt(((typeName.length()) - 1))) == '.')) {
-			skipEOLs();
-			if (match(com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-				next();
-				typeName += stream.getString();
-			}
-		} 
 
-		com.google.javascript.rhino.Node typeNameNode = newStringNode(typeName, lineno, charno);
 
-		if (match(com.google.javascript.jscomp.parsing.JsDocToken.LT)) {
-			next();
-			skipEOLs();
-			com.google.javascript.rhino.Node memberType = parseTypeExpressionList(next());
-			if (memberType != null) {
-				typeNameNode.addChildToFront(memberType);
-
-				skipEOLs();
-				if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.GT))) {
-					return reportTypeSyntaxWarning("msg.jsdoc.missing.gt");
-				}
 
-				next();
-			}
-		}
-		return typeNameNode;
-	}
 
 
 
 
 
 
-	private com.google.javascript.rhino.Node parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken token) {
 
 
-		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.LP)) {
-			restoreLookAhead(token);
-			return reportTypeSyntaxWarning("msg.jsdoc.missing.lp");
-		}
 
-		com.google.javascript.rhino.Node functionType = newNode(com.google.javascript.rhino.Token.FUNCTION);
-		com.google.javascript.rhino.Node parameters = null;
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) {
-			token = next();
 
-			boolean hasParams = true;
-			if (token == (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) {
-				java.lang.String tokenStr = stream.getString();
-				boolean isThis = "this".equals(tokenStr);
-				boolean isNew = "new".equals(tokenStr);
-				if (isThis || isNew) {
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COLON)) {
-						next();
-						skipEOLs();
-						com.google.javascript.rhino.Node contextType = wrapNode(
-						(isThis ? com.google.javascript.rhino.Token.THIS : com.google.javascript.rhino.Token.NEW), 
-						parseContextTypeExpression(next()));
-						if (contextType == null) {
-							return null;
-						}
 
-						functionType.addChildToFront(contextType);
-					}else {
-						return reportTypeSyntaxWarning("msg.jsdoc.missing.colon");
-					}
 
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA)) {
-						next();
-						skipEOLs();
-						token = next();
-					}else {
-						hasParams = false;
-					}
-				}
-			}
 
-			if (hasParams) {
-				parameters = parseParametersType(token);
-				if (parameters == null) {
-					return null;
-				}
-			}
-		}
 
-		if (parameters != null) {
-			functionType.addChildToBack(parameters);
-		}
 
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) {
-			return reportTypeSyntaxWarning("msg.jsdoc.missing.rp");
-		}
 
-		skipEOLs();
-		com.google.javascript.rhino.Node resultType = parseResultType(next());
-		if (resultType == null) {
-			return null;
-		}else {
-			functionType.addChildToBack(resultType);
-		}
-		return functionType;
-	}
 
 
 
@@ -2080,79 +1989,170 @@
 
 
 
-	private com.google.javascript.rhino.Node parseParametersType(com.google.javascript.jscomp.parsing.JsDocToken token) {
-		com.google.javascript.rhino.Node paramsType = newNode(com.google.javascript.rhino.Token.PARAM_LIST);
-		boolean isVarArgs = false;
-		com.google.javascript.rhino.Node paramType = null;
-		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.RP)) {
-			do {
-				if (paramType != null) {
 
-					next();
-					skipEOLs();
-					token = next();
-				}
 
-				if (token == (com.google.javascript.jscomp.parsing.JsDocToken.ELLIPSIS)) {
 
 
 
-					skipEOLs();
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.RP)) {
-						paramType = newNode(com.google.javascript.rhino.Token.ELLIPSIS);
-					}else {
-						skipEOLs();
-						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.LB))) {
-							return reportTypeSyntaxWarning("msg.jsdoc.missing.lb");
-						}
 
-						next();
-						skipEOLs();
-						paramType = wrapNode(com.google.javascript.rhino.Token.ELLIPSIS, parseTypeExpression(next()));
-						skipEOLs();
-						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RB))) {
-							return reportTypeSyntaxWarning("msg.jsdoc.missing.rb");
-						}
-						skipEOLs();
-						next();
-					}
 
-					isVarArgs = true;
-				}else {
-					paramType = parseTypeExpression(token);
-					if (match(com.google.javascript.jscomp.parsing.JsDocToken.EQUALS)) {
-						skipEOLs();
-						next();
-						paramType = wrapNode(com.google.javascript.rhino.Token.EQUALS, paramType);
-					}
-				}
 
-				if (paramType == null) {
-					return null;
-				}
-				paramsType.addChildToBack(paramType);
-				if (isVarArgs) {
-					break;
-				}
-			} while (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA) );
-		}
 
-		if (isVarArgs && (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA))) {
-			return reportTypeSyntaxWarning("msg.jsdoc.function.varargs");
-		}
 
 
 
-		return paramsType;
-	}
 
 
 
 
-	private com.google.javascript.rhino.Node parseResultType(com.google.javascript.jscomp.parsing.JsDocToken token) {
-		skipEOLs();
-		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.COLON))) {
-			return newNode(com.google.javascript.rhino.Token.EMPTY);
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+			return newNode(com.google.javascript.rhino.Token.EMPTY);} 		java.lang.String typeName = stream.getString(); 		int lineno = stream.getLineno(); 		int charno = stream.getCharno(); 		while ((match(com.google.javascript.jscomp.parsing.JsDocToken.EOL)) && ((typeName.charAt(((typeName.length()) - 1))) == '.')) { 			skipEOLs(); 			if (match(com.google.javascript.jscomp.parsing.JsDocToken.STRING)) { 				next(); 				typeName += stream.getString();}} 		com.google.javascript.rhino.Node typeNameNode = newStringNode(typeName, lineno, charno); 		if (match(com.google.javascript.jscomp.parsing.JsDocToken.LT)) { 			next(); 			skipEOLs(); 			com.google.javascript.rhino.Node memberType = parseTypeExpressionList(next()); 			if (memberType != null) { 				typeNameNode.addChildToFront(memberType); 				skipEOLs(); 				if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.GT))) { 					return reportTypeSyntaxWarning("msg.jsdoc.missing.gt");} 				next();}} 		return typeNameNode;} 	private com.google.javascript.rhino.Node parseFunctionType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.LP)) { 			restoreLookAhead(token); 			return reportTypeSyntaxWarning("msg.jsdoc.missing.lp");} 		com.google.javascript.rhino.Node functionType = newNode(com.google.javascript.rhino.Token.FUNCTION); 		com.google.javascript.rhino.Node parameters = null; 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) { 			token = next(); 			boolean hasParams = true; 			if (token == (com.google.javascript.jscomp.parsing.JsDocToken.STRING)) { 				java.lang.String tokenStr = stream.getString(); 				boolean isThis = "this".equals(tokenStr); 				boolean isNew = "new".equals(tokenStr); 				if (isThis || isNew) { 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COLON)) { 						next(); 						skipEOLs(); 						com.google.javascript.rhino.Node contextType = wrapNode((isThis ? com.google.javascript.rhino.Token.THIS : com.google.javascript.rhino.Token.NEW), parseContextTypeExpression(next())); 						if (contextType == null) { 							return null;} 						functionType.addChildToFront(contextType);}else { 						return reportTypeSyntaxWarning("msg.jsdoc.missing.colon");} 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA)) { 						next(); 						skipEOLs(); 						token = next();}else { 						hasParams = false;}}} 			if (hasParams) { 				parameters = parseParametersType(token); 				if (parameters == null) { 					return null;}}} 		if (parameters != null) { 			functionType.addChildToBack(parameters);} 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RP))) { 			return reportTypeSyntaxWarning("msg.jsdoc.missing.rp");} 		skipEOLs(); 		com.google.javascript.rhino.Node resultType = parseResultType(next()); 		if (resultType == null) { 			return null;}else { 			functionType.addChildToBack(resultType);} 		return functionType;} 	private com.google.javascript.rhino.Node parseParametersType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		com.google.javascript.rhino.Node paramsType = newNode(com.google.javascript.rhino.Token.PARAM_LIST); 		boolean isVarArgs = false; 		com.google.javascript.rhino.Node paramType = null; 		if (token != (com.google.javascript.jscomp.parsing.JsDocToken.RP)) { 			do { 				if (paramType != null) { 					next(); 					skipEOLs(); 					token = next();} 				if (token == (com.google.javascript.jscomp.parsing.JsDocToken.ELLIPSIS)) { 					skipEOLs(); 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.RP)) { 						paramType = newNode(com.google.javascript.rhino.Token.ELLIPSIS);}else { 						skipEOLs(); 						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.LB))) { 							return reportTypeSyntaxWarning("msg.jsdoc.missing.lb");} 						next(); 						skipEOLs(); 						paramType = wrapNode(com.google.javascript.rhino.Token.ELLIPSIS, parseTypeExpression(next())); 						skipEOLs(); 						if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.RB))) { 							return reportTypeSyntaxWarning("msg.jsdoc.missing.rb");} 						skipEOLs(); 						next();} 					isVarArgs = true;}else { 					paramType = parseTypeExpression(token); 					if (match(com.google.javascript.jscomp.parsing.JsDocToken.EQUALS)) { 						skipEOLs(); 						next(); 						paramType = wrapNode(com.google.javascript.rhino.Token.EQUALS, paramType);}} 				if (paramType == null) { 					return null;} 				paramsType.addChildToBack(paramType); 				if (isVarArgs) { 					break;}} while (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA) );} 		if (isVarArgs && (match(com.google.javascript.jscomp.parsing.JsDocToken.COMMA))) { 			return reportTypeSyntaxWarning("msg.jsdoc.function.varargs");} 		return paramsType;} 	private com.google.javascript.rhino.Node parseResultType(com.google.javascript.jscomp.parsing.JsDocToken token) { 		skipEOLs(); 		if (!(match(com.google.javascript.jscomp.parsing.JsDocToken.COLON))) { 			return newNode(com.google.javascript.rhino.Token.EMPTY);
 		}
 
 		token = next();



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:203) - Time Total(s): 7851.797


Node: 87634c904d3b



Date: Sat Jul  6 00:47:16 EDT 2019

cd /script/jGenProg_Defects4J_Closure_109;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Closure-109 \
	-failing com.google.javascript.jscomp.parsing.JsDocInfoParserTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 6 \
	-srcjavafolder src/ \
	-srctestfolder test \
	-binjavafolder build/classes/ \
	-bintestfolder build/test/ \
	-parameters x:x \
	-dependencies /script/jGenProg_Defects4J_Closure_109/build/classes:/script/jGenProg_Defects4J_Closure_109/build/test:/script/jGenProg_Defects4J_Closure_109/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_109/lib/ant.jar:/script/jGenProg_Defects4J_Closure_109/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_109/lib/guava.jar:/script/jGenProg_Defects4J_Closure_109/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_109/lib/json.jar:/script/jGenProg_Defects4J_Closure_109/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_109/lib/junit.jar:/script/jGenProg_Defects4J_Closure_109/lib/mockito-core.jar:/script/jGenProg_Defects4J_Closure_109/lib/objenesis.jar:/script/jGenProg_Defects4J_Closure_109/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_109/lib/args4j.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

