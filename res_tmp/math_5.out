Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO ] fr.inria.astor.core.setup.ProjectConfiguration.getVersionJDK(ProjectConfiguration.java:282) - Version of the JVM used: 1.7.0_181
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:372) - Java version of the JDK used to run tests: 1.7.0_181
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:373) - The compliance of the JVM is:  7
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:647) - command line arguments: [-mode  jgenprog  -location  .  -id  Math-5  -failing  org.apache.commons.math3.complex.ComplexTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  x:x  -dependencies  /script/jGenProg_Defects4J_Math_5/target/classes/:/script/jGenProg_Defects4J_Math_5/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.main.evolution.AstorMain.execute(AstorMain.java:222) - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:857) - Source folders: [/script/jGenProg_Defects4J_Math_5/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:876) - Source Test folders: [/script/jGenProg_Defects4J_Math_5/./src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Math_5/./output_astor/AstorMain-Math-5//bin//default from 786 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Math_5/./output_astor/AstorMain-Math-5//bin//default, /script/jGenProg_Defects4J_Math_5/target/classes/, /script/jGenProg_Defects4J_Math_5/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathTest#checkMissingFastMathClasses
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.complex.ComplexTest#testReciprocalZero
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:4949, fails: 2, GZoltar suspicious 34446, with positive susp 96
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 4949
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 8 with susp > 0.1, we consider: 8
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:788) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Math_5/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /script/jGenProg_Defects4J_Math_5/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:79) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Math_5/target/classes/, /script/jGenProg_Defects4J_Math_5/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 8
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 8,  8
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 8
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 8, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Math_5/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 588074
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math3.complex.ComplexTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Math-5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jgenprog
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Math_5/target/classes/:/script/jGenProg_Defects4J_Math_5/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:436) - -Found Solution, child variant #342
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:346) - Error variant :342 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 358.708
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 171
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 342
 
time(sec)= 358
operation: ReplaceOp
location= org.apache.commons.math3.complex.Complex
line= 305
lineSuspiciousness= 0.707
lineSuspiciousness= 0
original statement= return org.apache.commons.math3.complex.Complex.NaN
buggy kind= CtReturnImpl|CtBlockImpl
fixed statement= return org.apache.commons.math3.complex.Complex.INF
Patch kind= CtReturnImpl|CtBlockImpl
generation= 171
ingredientScope= LOCAL
validation=|true|0|4949|[]|
diffpatch=--- /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
+++ /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
@@ -119,7 +119,7 @@
 			return org.apache.commons.math3.complex.Complex.NaN;
 		}
 		if (((real) == 0.0) && ((imaginary) == 0.0)) {
-			return org.apache.commons.math3.complex.Complex.NaN;
+			return org.apache.commons.math3.complex.Complex.INF;
 		}
 		if (isInfinite) {
 			return org.apache.commons.math3.complex.Complex.ZERO;


diffpatchoriginal=--- /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
+++ /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
@@ -302,23 +302,8 @@
 		}
 
 		if (((real) == 0.0) && ((imaginary) == 0.0)) {
-			return org.apache.commons.math3.complex.Complex.NaN;
-		}
 
-		if (isInfinite) {
-			return org.apache.commons.math3.complex.Complex.ZERO;
-		}
 
-		if ((org.apache.commons.math3.util.FastMath.abs(real)) < (org.apache.commons.math3.util.FastMath.abs(imaginary))) {
-			double q = (real) / (imaginary);
-			double scale = 1.0 / (((real) * q) + (imaginary));
-			return createComplex((scale * q), (-scale));
-		}else {
-			double q = (imaginary) / (real);
-			double scale = 1.0 / (((imaginary) * q) + (real));
-			return createComplex(scale, ((-scale) * q));
-		}
-	}
 
 
 
@@ -335,21 +320,6 @@
 
 
 
-	@java.lang.Override
-	public boolean equals(java.lang.Object other) {
-		if ((this) == other) {
-			return true;
-		}
-		if (other instanceof org.apache.commons.math3.complex.Complex) {
-			org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));
-			if (c.isNaN) {
-				return isNaN;
-			}else {
-				return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
-			}
-		}
-		return false;
-	}
 
 
 
@@ -358,32 +328,18 @@
 
 
 
-	@java.lang.Override
-	public int hashCode() {
-		if (isNaN) {
-			return 7;
-		}
-		return 37 * ((17 * (org.apache.commons.math3.util.MathUtils.hash(imaginary))) + 
-		(org.apache.commons.math3.util.MathUtils.hash(real)));
-	}
 
 
 
 
 
 
-	public double getImaginary() {
-		return imaginary;
-	}
 
 
 
 
 
 
-	public double getReal() {
-		return real;
-	}
 
 
 
@@ -392,9 +348,6 @@
 
 
 
-	public boolean isNaN() {
-		return isNaN;
-	}
 
 
 
@@ -405,9 +358,6 @@
 
 
 
-	public boolean isInfinite() {
-		return isInfinite;
-	}
 
 
 
@@ -433,18 +383,68 @@
 
 
 
-	public org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex factor) throws 
-	org.apache.commons.math3.exception.NullArgumentException {
-		org.apache.commons.math3.util.MathUtils.checkNotNull(factor);
-		if ((isNaN) || (factor.isNaN)) {
-			return org.apache.commons.math3.complex.Complex.NaN;
-		}
-		if ((((java.lang.Double.isInfinite(real)) || 
-		(java.lang.Double.isInfinite(imaginary))) || 
-		(java.lang.Double.isInfinite(factor.real))) || 
-		(java.lang.Double.isInfinite(factor.imaginary))) {
 
-			return org.apache.commons.math3.complex.Complex.INF;
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+			return org.apache.commons.math3.complex.Complex.INF;} 		if (isInfinite) { 			return org.apache.commons.math3.complex.Complex.ZERO;} 		if ((org.apache.commons.math3.util.FastMath.abs(real)) < (org.apache.commons.math3.util.FastMath.abs(imaginary))) { 			double q = (real) / (imaginary); 			double scale = 1.0 / (((real) * q) + (imaginary)); 			return createComplex((scale * q), (-scale));}else { 			double q = (imaginary) / (real); 			double scale = 1.0 / (((imaginary) * q) + (real)); 			return createComplex(scale, ((-scale) * q));}} 	@java.lang.Override 	public boolean equals(java.lang.Object other) { 		if ((this) == other) { 			return true;} 		if (other instanceof org.apache.commons.math3.complex.Complex) { 			org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other)); 			if (c.isNaN) { 				return isNaN;}else { 				return ((real) == (c.real)) && ((imaginary) == (c.imaginary));}} 		return false;} 	@java.lang.Override 	public int hashCode() { 		if (isNaN) { 			return 7;} 		return 37 * ((17 * (org.apache.commons.math3.util.MathUtils.hash(imaginary))) + (org.apache.commons.math3.util.MathUtils.hash(real)));} 	public double getImaginary() { 		return imaginary;} 	public double getReal() { 		return real;} 	public boolean isNaN() { 		return isNaN;} 	public boolean isInfinite() { 		return isInfinite;} 	public org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex factor) throws org.apache.commons.math3.exception.NullArgumentException { 		org.apache.commons.math3.util.MathUtils.checkNotNull(factor); 		if ((isNaN) || (factor.isNaN)) { 			return org.apache.commons.math3.complex.Complex.NaN;} 		if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) { 			return org.apache.commons.math3.complex.Complex.INF;
 		}
 		return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), 
 		(((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Math-5
TOTAL_TIME=358.708
NR_GENERATIONS=171
NR_RIGHT_COMPILATIONS=90
NR_FAILLING_COMPILATIONS=80
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=342
TIME=358
VALIDATION=|true|0|4949|[]|
GENERATION=171
FOLDER_SOLUTION_CODE=/script/jGenProg_Defects4J_Math_5/./output_astor/AstorMain-Math-5//src//variant-342
--Patch Hunk #1
OPERATOR=ReplaceOp

LOCATION=org.apache.commons.math3.complex.Complex

PATH=/script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complex.java

MODIFIED_FILE_PATH=/script/jGenProg_Defects4J_Math_5/./output_astor/AstorMain-Math-5//src//variant-342/org/apache/commons/math3/complex/Complex.java

LINE=305

SUSPICIOUNESS=0.707

MP_RANKING=0

ORIGINAL_CODE=return org.apache.commons.math3.complex.Complex.NaN

BUGGY_CODE_TYPE=CtReturnImpl|CtBlockImpl

PATCH_HUNK_CODE=return org.apache.commons.math3.complex.Complex.INF

PATCH_HUNK_TYPE=CtReturnImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=return org.apache.commons.math3.complex.Complex.INF

PATCH_DIFF_ORIG=--- /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
+++ /script/jGenProg_Defects4J_Math_5/src/main/java/org/apache/commons/math3/complex/Complexjava
@@ -302,23 +302,8 @@
 		}
 
 		if (((real) == 0.0) && ((imaginary) == 0.0)) {
-			return org.apache.commons.math3.complex.Complex.NaN;
-		}
 
-		if (isInfinite) {
-			return org.apache.commons.math3.complex.Complex.ZERO;
-		}
 
-		if ((org.apache.commons.math3.util.FastMath.abs(real)) < (org.apache.commons.math3.util.FastMath.abs(imaginary))) {
-			double q = (real) / (imaginary);
-			double scale = 1.0 / (((real) * q) + (imaginary));
-			return createComplex((scale * q), (-scale));
-		}else {
-			double q = (imaginary) / (real);
-			double scale = 1.0 / (((imaginary) * q) + (real));
-			return createComplex(scale, ((-scale) * q));
-		}
-	}
 
 
 
@@ -335,21 +320,6 @@
 
 
 
-	@java.lang.Override
-	public boolean equals(java.lang.Object other) {
-		if ((this) == other) {
-			return true;
-		}
-		if (other instanceof org.apache.commons.math3.complex.Complex) {
-			org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));
-			if (c.isNaN) {
-				return isNaN;
-			}else {
-				return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
-			}
-		}
-		return false;
-	}
 
 
 
@@ -358,32 +328,18 @@
 
 
 
-	@java.lang.Override
-	public int hashCode() {
-		if (isNaN) {
-			return 7;
-		}
-		return 37 * ((17 * (org.apache.commons.math3.util.MathUtils.hash(imaginary))) + 
-		(org.apache.commons.math3.util.MathUtils.hash(real)));
-	}
 
 
 
 
 
 
-	public double getImaginary() {
-		return imaginary;
-	}
 
 
 
 
 
 
-	public double getReal() {
-		return real;
-	}
 
 
 
@@ -392,9 +348,6 @@
 
 
 
-	public boolean isNaN() {
-		return isNaN;
-	}
 
 
 
@@ -405,9 +358,6 @@
 
 
 
-	public boolean isInfinite() {
-		return isInfinite;
-	}
 
 
 
@@ -433,18 +383,68 @@
 
 
 
-	public org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex factor) throws 
-	org.apache.commons.math3.exception.NullArgumentException {
-		org.apache.commons.math3.util.MathUtils.checkNotNull(factor);
-		if ((isNaN) || (factor.isNaN)) {
-			return org.apache.commons.math3.complex.Complex.NaN;
-		}
-		if ((((java.lang.Double.isInfinite(real)) || 
-		(java.lang.Double.isInfinite(imaginary))) || 
-		(java.lang.Double.isInfinite(factor.real))) || 
-		(java.lang.Double.isInfinite(factor.imaginary))) {
 
-			return org.apache.commons.math3.complex.Complex.INF;
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+			return org.apache.commons.math3.complex.Complex.INF;} 		if (isInfinite) { 			return org.apache.commons.math3.complex.Complex.ZERO;} 		if ((org.apache.commons.math3.util.FastMath.abs(real)) < (org.apache.commons.math3.util.FastMath.abs(imaginary))) { 			double q = (real) / (imaginary); 			double scale = 1.0 / (((real) * q) + (imaginary)); 			return createComplex((scale * q), (-scale));}else { 			double q = (imaginary) / (real); 			double scale = 1.0 / (((imaginary) * q) + (real)); 			return createComplex(scale, ((-scale) * q));}} 	@java.lang.Override 	public boolean equals(java.lang.Object other) { 		if ((this) == other) { 			return true;} 		if (other instanceof org.apache.commons.math3.complex.Complex) { 			org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other)); 			if (c.isNaN) { 				return isNaN;}else { 				return ((real) == (c.real)) && ((imaginary) == (c.imaginary));}} 		return false;} 	@java.lang.Override 	public int hashCode() { 		if (isNaN) { 			return 7;} 		return 37 * ((17 * (org.apache.commons.math3.util.MathUtils.hash(imaginary))) + (org.apache.commons.math3.util.MathUtils.hash(real)));} 	public double getImaginary() { 		return imaginary;} 	public double getReal() { 		return real;} 	public boolean isNaN() { 		return isNaN;} 	public boolean isInfinite() { 		return isInfinite;} 	public org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex factor) throws org.apache.commons.math3.exception.NullArgumentException { 		org.apache.commons.math3.util.MathUtils.checkNotNull(factor); 		if ((isNaN) || (factor.isNaN)) { 			return org.apache.commons.math3.complex.Complex.NaN;} 		if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) { 			return org.apache.commons.math3.complex.Complex.INF;
 		}
 		return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), 
 		(((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:204) - Time Total(s): 1449.929


Node: 7b6864acb0dc



Date: Tue Jul 23 02:41:20 EDT 2019

cd /script/jGenProg_Defects4J_Math_5;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Math-5 \
	-failing org.apache.commons.math3.complex.ComplexTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters x:x \
	-dependencies /script/jGenProg_Defects4J_Math_5/target/classes/:/script/jGenProg_Defects4J_Math_5/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

