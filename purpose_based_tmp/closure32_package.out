Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
log4j:ERROR setFile(null,true) call failed.
java.io.FileNotFoundException:  (No such file or directory)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(FileOutputStream.java:270)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:133)
	at org.apache.log4j.FileAppender.setFile(FileAppender.java:294)
	at org.apache.log4j.RollingFileAppender.setFile(RollingFileAppender.java:207)
	at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:165)
	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:307)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:172)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:104)
	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:842)
	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:768)
	at org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:672)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:516)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:580)
	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)
	at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)
	at org.apache.log4j.Logger.getLogger(Logger.java:117)
	at fr.inria.astor.core.setup.ConfigurationProperties.<clinit>(ConfigurationProperties.java:16)
	at fr.inria.main.AbstractMain.<clinit>(AbstractMain.java:100)
2019-12-26 11:21:35,209 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.7.0_181
2019-12-26 11:21:35,217 INFO main - Java version of the JDK used to run tests: 1.7.0_181
2019-12-26 11:21:35,217 INFO main - The compliance of the JVM is:  7
2019-12-26 11:21:35,221 INFO main - command line arguments: [-mode  jgenprog  -location  .  -id  Closure-32  -failing  com.google.javascript.jscomp.IntegrationTest:com.google.javascript.jscomp.parsing.JsDocInfoParserTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  6  -srcjavafolder  src/  -srctestfolder  test  -binjavafolder  build/classes/  -bintestfolder  build/test/  -parameters  mode:purpose  -dependencies  /script/jGenProg_Defects4J_Closure_32/build/classes:/script/jGenProg_Defects4J_Closure_32/build/test:/script/jGenProg_Defects4J_Closure_32/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant.jar:/script/jGenProg_Defects4J_Closure_32/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_32/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_32/lib/json.jar:/script/jGenProg_Defects4J_Closure_32/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_32/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_32/lib/args4j.jar:/script/jGenProg_Defects4J_Closure_32/lib/guava.jar:/script/jGenProg_Defects4J_Closure_32/lib/junit.jar:/script/jGenProg_Defects4J_Closure_32/lib/rhino/testsrc/org/mozilla/javascript/tests/commonjs/module/modules.jar]
2019-12-26 11:21:35,225 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:975) - Source folders: [/script/jGenProg_Defects4J_Closure_32/./src]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:994) - Source Test folders: [/script/jGenProg_Defects4J_Closure_32/./test]
[INFO ] fr.inria.main.evolution.AstorMain.createEngine(AstorMain.java:108) - mode is Purpose
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.resolveTestsToRun(AstorCoreEngine.java:1311) - Test retrieved from classes: 434
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Closure_32/./output_astor/AstorMain-Closure-32//bin//default from 434 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Closure_32/./output_astor/AstorMain-Closure-32//bin//default, /script/jGenProg_Defects4J_Closure_32/build/classes/, /script/jGenProg_Defects4J_Closure_32/build/test/, /script/jGenProg_Defects4J_Closure_32/build/lib/rhino.jar, /script/jGenProg_Defects4J_Closure_32/lib/ant-launcher.jar, /script/jGenProg_Defects4J_Closure_32/lib/ant.jar, /script/jGenProg_Defects4J_Closure_32/lib/caja-r4314.jar, /script/jGenProg_Defects4J_Closure_32/lib/jarjar.jar, /script/jGenProg_Defects4J_Closure_32/lib/json.jar, /script/jGenProg_Defects4J_Closure_32/lib/jsr305.jar, /script/jGenProg_Defects4J_Closure_32/lib/protobuf-java.jar, /script/jGenProg_Defects4J_Closure_32/lib/args4j.jar, /script/jGenProg_Defects4J_Closure_32/lib/guava.jar, /script/jGenProg_Defects4J_Closure_32/lib/junit.jar, /script/jGenProg_Defects4J_Closure_32/lib/rhino/testsrc/org/mozilla/javascript/tests/commonjs/module/modules.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.IntegrationTest#testIssue701
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.parsing.JsDocInfoParserTest#testParseLicense
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.parsing.JsDocInfoParserTest#testParsePreserve
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: com.google.javascript.jscomp.parsing.JsDocInfoParserTest#testParseLicenseAscii
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:7438, fails: 6, GZoltar suspicious 41661, with positive susp 5284
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 7438
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 283 with susp > 0.1, we consider: 283
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:898) - Setting up the max to 2341760 milliseconds (2341 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:240) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Closure_32/./src
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:68) - building model: /script/jGenProg_Defects4J_Closure_32/./src, compliance level: 6
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:82) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Closure_32/build/classes/, /script/jGenProg_Defects4J_Closure_32/build/test/, /script/jGenProg_Defects4J_Closure_32/build/lib/rhino.jar, /script/jGenProg_Defects4J_Closure_32/lib/ant-launcher.jar, /script/jGenProg_Defects4J_Closure_32/lib/ant.jar, /script/jGenProg_Defects4J_Closure_32/lib/caja-r4314.jar, /script/jGenProg_Defects4J_Closure_32/lib/jarjar.jar, /script/jGenProg_Defects4J_Closure_32/lib/json.jar, /script/jGenProg_Defects4J_Closure_32/lib/jsr305.jar, /script/jGenProg_Defects4J_Closure_32/lib/protobuf-java.jar, /script/jGenProg_Defects4J_Closure_32/lib/args4j.jar, /script/jGenProg_Defects4J_Closure_32/lib/guava.jar, /script/jGenProg_Defects4J_Closure_32/lib/junit.jar, /script/jGenProg_Defects4J_Closure_32/lib/rhino/testsrc/org/mozilla/javascript/tests/commonjs/module/modules.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:779) - Number of CtTypes created: 400
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 283
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=com.google.javascript.jscomp.CompilerTestCase, methodName=createModuleChain([Ljava/lang/String;)[Lcom/google/javascript/jscomp/JSModule;, lineNumber=969, susp=0.10050378152592121]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 283,  217
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 217
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 217, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 4.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Closure_32/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 2341760
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= test
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= com.google.javascript.jscomp.IntegrationTest:com.google.javascript.jscomp.parsing.JsDocInfoParserTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 6
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Closure-32
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build/test/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= purpose
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Closure_32/build/classes:/script/jGenProg_Defects4J_Closure_32/build/test:/script/jGenProg_Defects4J_Closure_32/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant.jar:/script/jGenProg_Defects4J_Closure_32/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_32/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_32/lib/json.jar:/script/jGenProg_Defects4J_Closure_32/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_32/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_32/lib/args4j.jar:/script/jGenProg_Defects4J_Closure_32/lib/guava.jar:/script/jGenProg_Defects4J_Closure_32/lib/junit.jar:/script/jGenProg_Defects4J_Closure_32/lib/rhino/testsrc/org/mozilla/javascript/tests/commonjs/module/modules.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
14:13:26.706 [main] INFO  org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
14:13:28.385 [main] INFO  org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 6
14:13:29.212 [main] INFO  org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 6
14:13:29.218 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Linux]
14:13:29.219 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [48]; Memory: [3.6GB];
14:13:29.219 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
14:13:29.691 [main] INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [2.84 MB]
14:13:32.337 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
14:13:32.338 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
14:13:32.349 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
14:17:10.306 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
14:17:10.306 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
14:17:10.309 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a null pointer exception in FunctionType.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Fix a null pointer exception in FunctionType.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a null pointer exception in FunctionType.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Fix a null pointer exception in FunctionType.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use better APIs for Rhino, to make upgrading easier.
, IngredientB: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332
, IngredientB: Use better APIs for Rhino, to make upgrading easier.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: handle fileoverviews in the symbol table
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: handle fileoverviews in the symbol table
, IngredientB: handle fileoverviews in the symbol table

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: handle fileoverviews in the symbol table
, IngredientB: handle fileoverviews in the symbol table

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: handle fileoverviews in the symbol table
, IngredientB: handle fileoverviews in the symbol table

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: handle fileoverviews in the symbol table

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: handle fileoverviews in the symbol table
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: handle fileoverviews in the symbol table

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332
, IngredientB: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332
, IngredientB: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Emit a warning if a block comment looks like it should be a jsdoc comment fixes issue 332

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use better APIs for Rhino, to make upgrading easier.
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Use better APIs for Rhino, to make upgrading easier.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.
, IngredientB: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.
, IngredientB: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.
, IngredientB: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Make start position and length information consistent for named function nodes by moving start position to beginning of 'function' token, rather than the first position of the function's name token.  tests updated accordingly.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Clean up some record keeping of comments.  This doesn't appear to have helped the parsing speed at all.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Define number keys in object literals to be quoted string nodes. Tagged with NUMBER_PROP Fixes issue 347

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Remove unused Token ids.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Remove unused Token ids.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)
, IngredientB: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)
, IngredientB: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix the CATCH tree structure.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Fix the CATCH tree structure.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: tighten up some types. (Nick) R=alan DELTA=4  (2 added, 0 deleted, 2 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644
, IngredientB: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644
, IngredientB: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Don't silently ignore transform "for each" into "for" loops, report an error instead. Fixes issue 644

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Generate a parse error for unnamed function statements. Fixes issue 251.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Generate a parse error for unnamed function statements. Fixes issue 251.
, IngredientB: Generate a parse error for unnamed function statements. Fixes issue 251.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Generate a parse error for unnamed function statements. Fixes issue 251.
, IngredientB: Generate a parse error for unnamed function statements. Fixes issue 251.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Generate a parse error for unnamed function statements. Fixes issue 251.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Handle another case of an incomplete function definition in ide-mode.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Handle another case of an incomplete function definition in ide-mode.
, IngredientB: Handle another case of an incomplete function definition in ide-mode.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Handle another case of an incomplete function definition in ide-mode.
, IngredientB: Handle another case of an incomplete function definition in ide-mode.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Handle another case of an incomplete function definition in ide-mode.
, IngredientB: Handle another case of an incomplete function definition in ide-mode.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Handle another case of an incomplete function definition in ide-mode.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663
, IngredientB: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663
, IngredientB: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in "ide mode". Fixes issue 663

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for other charset types.
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Add support for other charset types.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Trying this change again.  I don't think the breakages were actually caused by this CL.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Trying this change again.  I don't think the breakages were actually caused by this CL.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)
, IngredientB: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Follow up on code review comments: preserve souce information during normalization. (John) R=nick DELTA=28  (22 added, 0 deleted, 6 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Enable keywords as property names for ECMASCRIPT5
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Enable keywords as property names for ECMASCRIPT5

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/26 by nick
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/26 by nick
, IngredientB: Change on 2010/04/26 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Change on 2010/04/26 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Automated g4 rollback.
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Automated g4 rollback.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: GetProp & Call nodes have incorrect Line, Offset, and Charno positions. Calls changed from position of '(' to position of the call target name. GetProp line&char no changed to be the position of the start of the left-most child, not the '.' that the GetProp represents which was incorrect when on multiple lines.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix vertical tab encoding fixes issue 601
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: fix vertical tab encoding fixes issue 601

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Move NodeTypeNormalizations into the IRFactory. (John) R=robert DELTA=42  (22 added, 7 deleted, 13 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add length to Node in IDE mode
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add length to Node in IDE mode

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make DELPROP of a non-reference a parser error
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make DELPROP of a non-reference a parser error
, IngredientB: Make DELPROP of a non-reference a parser error

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Make DELPROP of a non-reference a parser error

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make DELPROP of a non-reference a parser error
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make DELPROP of a non-reference a parser error
, IngredientB: Make DELPROP of a non-reference a parser error

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Make DELPROP of a non-reference a parser error

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/06/28 16:56:22 by dhans
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.
, IngredientB: Change on 2010/06/28 16:56:22 by dhans

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.
, IngredientB: Replace the bulk of the Node.getType() == Token.XXX calls with Node.isXXX calls.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.
, IngredientB: Don't let invalid LHS assignments to slip through. Fixes issue 215. Fixes issue 214.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.
, IngredientB: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Add --accept_const_keyword and --language_in flag so that we can accept 'const' keyword and ECMAScript5 compatible javascript source code.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix node lengths on Names of Var sub-trees where the variable is initialized at declaration point.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix node lengths on Names of Var sub-trees where the variable is initialized at declaration point.
, IngredientB: fix node lengths on Names of Var sub-trees where the variable is initialized at declaration point.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: fix node lengths on Names of Var sub-trees where the variable is initialized at declaration point.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/26 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/26 by nick
, IngredientB: Change on 2010/04/26 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Change on 2010/04/26 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Only accept ES5 style getter/setters (the must have 0 and 1 parameters respectively).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use the new IR interface where possible.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/07/02 17:44:46 by nicksantos
, IngredientB: Use the new IR interface where possible.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use the new IR interface where possible.
, IngredientB: Change on 2010/07/02 17:44:46 by nicksantos

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Use the new IR interface where possible.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Record the source file in params, so that they get proper source info
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Record the source file in params, so that they get proper source info

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Record the original source comment if parseJsDocDocumentation is enabled
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Record the original source comment if parseJsDocDocumentation is enabled
, IngredientB: Record the original source comment if parseJsDocDocumentation is enabled

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.
, IngredientB: Record the original source comment if parseJsDocDocumentation is enabled

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Speed up parsing a bit by refactoring how we pull jsdoc comments into the AST.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Adding getPropertyNode functionality to ObjectType. This needs associating nodes to properties in defineProperty.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Record the source file in params, so that they get proper source info
, IngredientB: Adding getPropertyNode functionality to ObjectType. This needs associating nodes to properties in defineProperty.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Record the source file in params, so that they get proper source info

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Id Generator Annotations.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Id Generator Annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: add an @expose annotation
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: add an @expose annotation

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add parsing logic for the lends annotation.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Add parsing logic for the lends annotation.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better support for jsdoc toolkit annotations.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better support for jsdoc toolkit annotations.
, IngredientB: Better support for jsdoc toolkit annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.
, IngredientB: Better support for jsdoc toolkit annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix if-folding compiler crash (issue 43) Fix property-collapsing compiler crash (issue 34) Fix labeled VAR compiler crash (issue 41) Make [paramName] syntax denote optionality (issue #26) Better function inlining.
, IngredientB: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix if-folding compiler crash (issue 43) Fix property-collapsing compiler crash (issue 34) Fix labeled VAR compiler crash (issue 41) Make [paramName] syntax denote optionality (issue #26) Better function inlining.
, IngredientB: Fix if-folding compiler crash (issue 43) Fix property-collapsing compiler crash (issue 34) Fix labeled VAR compiler crash (issue 41) Make [paramName] syntax denote optionality (issue #26) Better function inlining.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.
, IngredientB: Fix if-folding compiler crash (issue 43) Fix property-collapsing compiler crash (issue 34) Fix labeled VAR compiler crash (issue 41) Make [paramName] syntax denote optionality (issue #26) Better function inlining.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.
, IngredientB: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better support for jsdoc toolkit annotations.
, IngredientB: Better number printing. Add flags for fine-grained warning controls. Better type-declaration finding. Added some missing externs. Marked externs that don't have side effects.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Better support for jsdoc toolkit annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better support for jsdoc toolkit annotations.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Better support for jsdoc toolkit annotations.
, IngredientB: Better support for jsdoc toolkit annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Better support for jsdoc toolkit annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Id Generator Annotations.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Id Generator Annotations.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: @return should only treat stuff in {} as type annotations
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix a regression in marker placement
, IngredientB: @return should only treat stuff in {} as type annotations

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: fix a regression in marker placement

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: don't parse documentation that we have no plans on using.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: don't parse documentation that we have no plans on using.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Implement multiple extends for interfaces
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Implement multiple extends for interfaces
, IngredientB: Implement multiple extends for interfaces

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Implement multiple extends for interfaces

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add support for "@modifies{this}" and "@modifies{arguments}".
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add support for "@modifies{this}" and "@modifies{arguments}".

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Fix a bunch of bugs in marker generation, and add lots of inline assertions to prevent this from regressing. Right now, Grok has a bunch of checks to work around these bugs, and we would like to get rid of them.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add multiple extends annotations for interfaces in JsDoc
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add multiple extends annotations for interfaces in JsDoc

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Make lists the canonical representation of compiler sources. They're so much easier to sort and mutate, which is going to make a difference once we start sorting sources. (Nick) R=robert DELTA=97  (58 added, 6 deleted, 33 changed)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use the new IR interface where possible.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a pass for collecting symbols exported like window['x'] = ...
, IngredientB: Use the new IR interface where possible.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add a pass for collecting symbols exported like window['x'] = ...

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use the new IR interface where possible.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Use the new IR interface where possible.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/09 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/09 by nick
, IngredientB: Change on 2010/04/09 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/09 by nick
, IngredientB: Change on 2010/04/09 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/09 by nick
, IngredientB: Change on 2010/04/09 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/04/09 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add an indexer for type references in jsdoc tags
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Add an indexer for type references in jsdoc tags

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add an indexer for type references in jsdoc tags
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add an indexer for type references in jsdoc tags

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Allow type names to be split across multiple lines. To avoid parsing ambiguities, we insist that the type name must end in a '.' to get this behavior.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add a syntax for constructors {function(new:Type)} fixes issue 281
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Add a syntax for constructors {function(new:Type)} fixes issue 281

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Rename a couple of AST nodes: DEFAULT becomes DEFAULT_CASE LP becomes PARAM_LIST GET becomes GETTER_DEF SET becomes SETTER_DEF

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Adding getPropertyNode functionality to ObjectType. This needs associating nodes to properties in defineProperty.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Add an indexer for type references in jsdoc tags
, IngredientB: Adding getPropertyNode functionality to ObjectType. This needs associating nodes to properties in defineProperty.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix up jsdoc refs to primitive types
, IngredientB: Add an indexer for type references in jsdoc tags

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: fix up jsdoc refs to primitive types
, IngredientB: fix up jsdoc refs to primitive types

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Use the new IR interface where possible.
, IngredientB: fix up jsdoc refs to primitive types

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Use the new IR interface where possible.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Put bad type annotations behind a diagnostic group, so that they aren't reported if type-checking isn't on.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/04/09 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/04/09 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Part 3, source name/input id split: Change the construction of JSDocInfo to allow the determination of the source type (extern or not) without requiring the source to be looked up by name.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Don't eat the first token of the @return description. This is kind of a hack because it mixes the character stream up with the token stream, but it's probably more maintainable and has less overhead than trying to manage the description in the token stream (which is the "pure-but-lots-of-work" solution).

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Patch for specifying additional annotation names contributed by klaus Fixes Issue 514.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Change on 2010/05/06 by nick
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Change on 2010/05/06 by nick

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Tweak the parser to handle the restrict ES5 keyword set.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Tweak the parser to handle the restrict ES5 keyword set.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Turn off the option to understand qualified function names e.g., function a.b() {} This Rhino option doesn't actually work (in fact, there are still TODOs in there to finish the feature)
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: In IDE mode, allow partial parsing
, IngredientB: Turn off the option to understand qualified function names e.g., function a.b() {} This Rhino option doesn't actually work (in fact, there are still TODOs in there to finish the feature)

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/
, IngredientB: In IDE mode, allow partial parsing

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Update to Rhino@head http://code.google.com/p/closure-compiler-rhino/

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Make StaticSourceFile a property of Node
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Make StaticSourceFile a property of Node

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:136) - model does not have the commit message. IngredientA: Initial commit.
, IngredientB: Initial commit.

14:55:25.216 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
14:55:25.217 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
14:55:25.218 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:179) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - Killed the Process that runs JUnit test cases 89316
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:179) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - Killed the Process that runs JUnit test cases 4110
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:179) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - Killed the Process that runs JUnit test cases 5755
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:179) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:181) - Killed the Process that runs JUnit test cases 23316
[ERROR] fr.inria.astor.core.entities.HasCommitMessage.parseGitLogLAndSetCommitMessage(HasCommitMessage.java:50) - No developer message
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.belowMaxTime(AstorCoreEngine.java:278) - 
 No more time for operating
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 7208.507
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 223
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:257) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:208) - Time Total(s): 17405.979


Node: f6872f0bbe1c



Date: Thu Dec 26 16:11:43 EST 2019

cd /script/jGenProg_Defects4J_Closure_32;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Closure-32 \
	-failing com.google.javascript.jscomp.IntegrationTest:com.google.javascript.jscomp.parsing.JsDocInfoParserTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 6 \
	-srcjavafolder src/ \
	-srctestfolder test \
	-binjavafolder build/classes/ \
	-bintestfolder build/test/ \
	-parameters mode:purpose \
	-dependencies /script/jGenProg_Defects4J_Closure_32/build/classes:/script/jGenProg_Defects4J_Closure_32/build/test:/script/jGenProg_Defects4J_Closure_32/build/lib/rhino.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant-launcher.jar:/script/jGenProg_Defects4J_Closure_32/lib/ant.jar:/script/jGenProg_Defects4J_Closure_32/lib/caja-r4314.jar:/script/jGenProg_Defects4J_Closure_32/lib/jarjar.jar:/script/jGenProg_Defects4J_Closure_32/lib/json.jar:/script/jGenProg_Defects4J_Closure_32/lib/jsr305.jar:/script/jGenProg_Defects4J_Closure_32/lib/protobuf-java.jar:/script/jGenProg_Defects4J_Closure_32/lib/args4j.jar:/script/jGenProg_Defects4J_Closure_32/lib/guava.jar:/script/jGenProg_Defects4J_Closure_32/lib/junit.jar:/script/jGenProg_Defects4J_Closure_32/lib/rhino/testsrc/org/mozilla/javascript/tests/commonjs/module/modules.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

