Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
log4j:ERROR setFile(null,true) call failed.
java.io.FileNotFoundException:  (No such file or directory)
	at java.io.FileOutputStream.open0(Native Method)
	at java.io.FileOutputStream.open(FileOutputStream.java:270)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
	at java.io.FileOutputStream.<init>(FileOutputStream.java:133)
	at org.apache.log4j.FileAppender.setFile(FileAppender.java:294)
	at org.apache.log4j.RollingFileAppender.setFile(RollingFileAppender.java:207)
	at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:165)
	at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:307)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:172)
	at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:104)
	at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:842)
	at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:768)
	at org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:672)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:516)
	at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:580)
	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)
	at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)
	at org.apache.log4j.Logger.getLogger(Logger.java:117)
	at fr.inria.astor.core.setup.ConfigurationProperties.<clinit>(ConfigurationProperties.java:16)
	at fr.inria.main.AbstractMain.<clinit>(AbstractMain.java:100)
2019-11-21 08:53:18,536 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.7.0_181
2019-11-21 08:53:18,537 INFO main - Java version of the JDK used to run tests: 1.7.0_181
2019-11-21 08:53:18,537 INFO main - The compliance of the JVM is:  7
2019-11-21 08:53:18,539 INFO main - command line arguments: [-mode  jgenprog  -location  .  -id  Math-3  -failing  org.apache.commons.math3.util.MathArraysTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  mode:purpose  -dependencies  /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar]
2019-11-21 08:53:18,540 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:975) - Source folders: [/script/jGenProg_Defects4J_Math_3/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:994) - Source Test folders: [/script/jGenProg_Defects4J_Math_3/./src/test/java]
[INFO ] fr.inria.main.evolution.AstorMain.createEngine(AstorMain.java:108) - mode is Purpose
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.resolveTestsToRun(AstorCoreEngine.java:1311) - Test retrieved from classes: 818
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Math_3/./output_astor/AstorMain-Math-3//bin//default from 818 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Math_3/./output_astor/AstorMain-Math-3//bin//default, /script/jGenProg_Defects4J_Math_3/target/classes/, /script/jGenProg_Defects4J_Math_3/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testTwoSets
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testIllConditioned
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testCircleFitting
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[21]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[22]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[23]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[24]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[25]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[26]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[47]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[48]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[49]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[50]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[51]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.linear.SimplexSolverTest#testMath828Cycle
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testBox
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testCross
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testInterval
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testMultiple
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testSinglePoint
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.stat.descriptive.rank.PercentileTest#testSpecialValues
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.exception.util.LocalizedFormatsTest#testMessageNumber
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.complex.ComplexTest#testReciprocalReal
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.complex.ComplexTest#testMath221
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest#testCircleFitting
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:5072, fails: 28, GZoltar suspicious 35141, with positive susp 2071
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 5072
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 946 with susp > 0.1, we consider: 946
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:898) - Setting up the max to 3383190 milliseconds (3383 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:240) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Math_3/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:68) - building model: /script/jGenProg_Defects4J_Math_3/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:82) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Math_3/target/classes/, /script/jGenProg_Defects4J_Math_3/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:779) - Number of CtTypes created: 735
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 946
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=105, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=108, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=111, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=112, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=68, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=69, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=71, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=72, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=73, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=74, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=75, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=76, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=77, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=78, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=79, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=81, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=53, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=54, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=55, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=56, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=57, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=58, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=59, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=60, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=addPoint(DD)V, lineNumber=39, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=addPoint(DD)V, lineNumber=40, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=43, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=44, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=45, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=46, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=47, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getObjectiveFunction()Lorg/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction;, lineNumber=51, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getObjectiveFunctionGradient()Lorg/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient;, lineNumber=66, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar;)Ljava/util/ArrayList;, lineNumber=31, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane, methodName=getPlus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;, lineNumber=119, susp=0.21055872190307892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane, methodName=getMinus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;, lineNumber=126, susp=0.21055872190307892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=62, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=63, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=65, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=66, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=68, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=71, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=72, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=90, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=95, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=99, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=100, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=134, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=plusFound()Z, lineNumber=140, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=minusFound()Z, lineNumber=147, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=116, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=117, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=118, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=120, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=121, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=113, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=114, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=125, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=126, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=130, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;)Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;, lineNumber=35, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 946,  275
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 275
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 275, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Math_3/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 3383190
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math3.util.MathArraysTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Math-3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= purpose
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
09:31:40.111 [main] INFO  org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
09:31:41.633 [main] INFO  org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 6
09:31:42.443 [main] INFO  org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 6
09:31:42.447 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Linux]
09:31:42.447 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [48]; Memory: [3.5GB];
09:31:42.447 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
09:31:43.049 [main] INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [3.96 MB]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:31:45.720 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:45.720 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:45.729 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final int n = vertices.length,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:31:48.500 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:48.501 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:48.502 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:31:51.124 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:51.125 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:51.126 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:31:53.672 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:53.673 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:53.674 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:31:56.247 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:56.247 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:56.249 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:31:58.699 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:31:58.700 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:31:58.701 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> edges = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:01.074 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:01.074 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:01.076 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> edges = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:03.222 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:03.222 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:03.224 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:05.660 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:05.661 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:05.663 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:08.141 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:08.142 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:08.143 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:10.573 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:10.574 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:10.575 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:13.022 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:13.022 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:13.024 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:15.234 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:15.235 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:15.236 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:17.654 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:17.654 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:17.656 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:19.853 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:19.853 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:19.854 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:22.038 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:22.039 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:22.040 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:24.555 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:24.555 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:24.556 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:27.114 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:27.114 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:27.116 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:32:29.588 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:29.589 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:29.590 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:32:31.526 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:31.526 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:31.527 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:32:33.458 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:33.458 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:33.459 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:35.400 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:35.400 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:35.401 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:37.333 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:37.333 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:37.334 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:32:39.742 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:39.743 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:39.744 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:42.076 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:42.077 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:42.078 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:44.530 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:44.530 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:44.531 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:47.056 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:47.057 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:47.058 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:32:49.631 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:49.632 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:49.634 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:52.116 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:52.117 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:52.118 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:54.402 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:54.403 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:54.404 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:32:56.942 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:56.942 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:56.944 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:32:59.407 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:32:59.407 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:32:59.409 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:01.722 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:01.722 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:01.723 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:03.713 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:03.714 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:03.715 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:05.648 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:05.649 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:05.650 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:07.519 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:07.520 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:07.521 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:09.818 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:09.818 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:09.819 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:12.334 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:12.334 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:12.335 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:14.778 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:14.779 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:14.780 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:17.181 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:17.182 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:17.183 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:19.563 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:19.564 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:19.565 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:22.003 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:22.004 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:22.005 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:24.467 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:24.468 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:24.469 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:26.818 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:26.818 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:26.819 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:28.954 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:28.955 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:28.956 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:31.323 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:31.324 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:31.325 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:33.728 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:33.729 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:33.730 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:36.096 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:36.097 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:36.098 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:38.420 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:38.421 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:38.422 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:33:40.477 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:40.478 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:40.479 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:42.811 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:42.811 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:42.812 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:45.050 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:45.050 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:45.051 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:33:47.210 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:47.210 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:47.211 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:33:49.597 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:49.598 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:49.599 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:33:51.914 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:51.915 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:51.916 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:33:54.021 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:54.021 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:54.022 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:33:56.121 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:56.121 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:56.122 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:33:58.298 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:33:58.298 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:33:58.299 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:00.353 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:00.353 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:00.354 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:02.484 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:02.484 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:02.485 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:34:04.708 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:04.709 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:04.710 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:34:07.131 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:07.132 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:07.133 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:09.319 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:09.319 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:09.320 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:11.327 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:11.328 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:11.329 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:13.373 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:13.374 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:13.375 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:15.552 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:15.552 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:15.553 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:18.090 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:18.090 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:18.091 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:20.501 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:20.501 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:20.503 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:22.492 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:22.492 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:22.493 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:24.796 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:24.797 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:24.798 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:26.816 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:26.816 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:26.817 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:29.096 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:29.097 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:29.098 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:31.230 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:31.230 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:31.231 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:33.208 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:33.208 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:33.209 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:35.493 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:35.494 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:35.495 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:37.867 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:37.867 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:37.868 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:40.044 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:40.044 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:40.046 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:42.459 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:42.460 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:42.461 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:44.841 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:44.841 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:44.842 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:47.023 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:47.023 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:47.024 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:49.163 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:49.163 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:49.164 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:51.253 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:51.253 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:51.254 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:53.155 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:53.155 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:53.156 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:34:55.347 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:55.347 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:55.348 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:57.368 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:57.368 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:57.369 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:34:59.280 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:34:59.281 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:34:59.282 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:01.313 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:01.313 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:01.314 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:03.413 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:03.413 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:03.414 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:05.372 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:05.373 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:05.373 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:07.310 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:07.310 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:07.311 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:09.237 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:09.237 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:09.238 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:11.157 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:11.158 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:11.159 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:13.170 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:13.170 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:13.171 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:15.132 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:15.133 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:15.134 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:17.138 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:17.138 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:17.139 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:19.180 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:19.180 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:19.181 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:21.239 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:21.240 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:21.241 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:23.621 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:23.621 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:23.622 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:25.879 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:25.879 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:25.880 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:27.819 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:27.819 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:27.820 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:29.776 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:29.776 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:29.777 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:31.996 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:31.997 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:31.998 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:33.866 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:33.866 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:33.867 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:35.805 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:35.805 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:35.806 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:37.843 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:37.845 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:37.846 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:39.843 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:39.843 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:39.844 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:41.810 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:41.810 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:41.811 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:43.731 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:43.732 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:43.733 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:45.672 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:45.673 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:45.674 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:47.597 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:47.597 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:47.598 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:49.575 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:49.576 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:49.577 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:51.665 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:51.665 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:51.666 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:53.595 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:53.595 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:53.596 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:35:55.542 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:55.542 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:55.543 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:57.439 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:57.440 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:57.441 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:35:59.336 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:35:59.336 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:35:59.337 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:01.313 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:01.313 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:01.314 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:03.329 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:03.329 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:03.330 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:05.240 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:05.240 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:05.241 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:07.193 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:07.193 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:07.194 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:09.208 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:09.208 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:09.209 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:11.188 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:11.188 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:11.189 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:13.217 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:13.217 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:13.218 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:15.101 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:15.101 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:15.103 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:17.000 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:17.000 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:17.002 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:18.903 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:18.903 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:18.904 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:20.969 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:20.969 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:20.970 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:23.384 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:23.385 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:23.387 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:25.573 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:25.574 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:25.575 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:27.763 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:27.763 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:27.765 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:30.140 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:30.140 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:30.142 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:32.499 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:32.499 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:32.500 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:34.599 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:34.599 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:34.600 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:36.616 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:36.616 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:36.617 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:38.754 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:38.754 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:38.755 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:40.764 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:40.764 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:40.765 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:42.647 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:42.647 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:42.648 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:44.717 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:44.717 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:44.718 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:46.872 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:46.872 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:46.873 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:48.939 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:48.939 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:48.940 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:36:51.329 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:51.329 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:51.330 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:53.741 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:53.741 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:53.742 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:55.658 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:55.658 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:55.659 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:36:57.734 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:57.734 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:57.735 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:36:59.882 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:36:59.883 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:36:59.884 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:01.810 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:01.810 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:01.811 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:03.771 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:03.771 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:03.773 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:05.949 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:05.949 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:05.950 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:08.089 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:08.089 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:08.090 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:10.400 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:10.400 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:10.401 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:12.432 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:12.432 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:12.434 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:14.693 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:14.693 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:14.694 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:16.782 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:16.782 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:16.783 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:18.945 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:18.945 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:18.946 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:21.087 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:21.087 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:21.088 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:23.431 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:23.431 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:23.432 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:25.575 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:25.576 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:25.577 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:27.817 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:27.817 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:27.818 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:30.204 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:30.204 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:30.205 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:32.238 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:32.238 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:32.239 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:34.477 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:34.477 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:34.478 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:36.476 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:36.476 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:36.477 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:38.519 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:38.520 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:38.520 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:40.741 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:40.741 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:40.742 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:43.142 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:43.143 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:43.144 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:45.113 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:45.113 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:45.114 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:47.573 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:47.573 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:47.574 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:49.512 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:49.513 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:49.514 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:51.849 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:51.849 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:51.850 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:53.740 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:53.741 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:53.742 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:55.624 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:55.624 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:55.625 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:37:57.572 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:57.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:57.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:37:59.603 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:37:59.603 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:37:59.604 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:01.711 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:01.712 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:01.713 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:03.638 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:03.639 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:03.640 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:05.818 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:05.818 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:05.819 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:08.121 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:08.121 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:08.123 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:10.502 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:10.503 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:10.504 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:12.675 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:12.675 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:12.676 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:14.826 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:14.826 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:14.827 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:17.001 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:17.001 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:17.002 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:19.154 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:19.154 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:19.155 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:21.222 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:21.223 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:21.224 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:23.133 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:23.133 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:23.134 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:25.084 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:25.084 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:25.085 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:27.370 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:27.370 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:27.371 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:29.413 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:29.413 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:29.414 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:31.586 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:31.587 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:31.588 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:33.461 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:33.461 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:33.462 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:35.355 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:35.356 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:35.356 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:38:37.591 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:37.591 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:37.592 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:39.805 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:39.805 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:39.806 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:38:42.126 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:42.127 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:42.128 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:44.605 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:44.605 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:44.606 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:38:46.518 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:46.518 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:46.519 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:38:48.473 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:48.473 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:48.474 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:50.741 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:50.741 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:50.742 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:38:52.690 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:52.691 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:52.692 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:54.607 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:54.607 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:54.608 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:38:56.494 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:56.494 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:56.495 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:38:58.397 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:38:58.398 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:38:58.399 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:00.565 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:00.565 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:00.567 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:02.989 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:02.989 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:02.991 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:05.421 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:05.421 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:05.422 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:07.571 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:07.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:07.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:09.720 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:09.721 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:09.722 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:11.852 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:11.852 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:11.853 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:13.933 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:13.933 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:13.934 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:15.838 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:15.839 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:15.840 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:17.890 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:17.890 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:17.891 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:19.957 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:19.957 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:19.958 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:21.954 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:21.955 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:21.956 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:23.839 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:23.839 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:23.840 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:25.733 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:25.733 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:25.734 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:27.752 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:27.752 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:27.753 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:29.958 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:29.958 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:29.959 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:32.129 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:32.129 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:32.130 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:34.535 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:34.536 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:34.537 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:36.986 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:36.986 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:36.987 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:39.333 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:39.333 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:39.334 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:41.408 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:41.408 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:41.409 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:43.851 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:43.852 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:43.853 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:45.726 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:45.726 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:45.727 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:47.631 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:47.631 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:47.632 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:50.159 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:50.160 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:50.161 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:52.587 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:52.588 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:52.589 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:54.843 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:54.843 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:54.845 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:39:56.949 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:56.949 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:56.950 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:39:59.118 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:39:59.119 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:39:59.120 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:01.143 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:01.143 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:01.144 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:03.136 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:03.136 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:03.137 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:05.274 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:05.274 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:05.275 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:07.157 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:07.157 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:07.158 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:09.272 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:09.272 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:09.273 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:11.304 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:11.304 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:11.305 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:13.364 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:13.364 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:13.366 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:15.665 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:15.666 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:15.667 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:18.112 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:18.112 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:18.113 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:20.088 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:20.089 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:20.090 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:22.426 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:22.426 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:22.427 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:24.347 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:24.347 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:24.348 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:26.272 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:26.272 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:26.273 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:28.371 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:28.371 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:28.372 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:30.590 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:30.590 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:30.591 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:32.517 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:32.517 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:32.518 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:34.397 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:34.397 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:34.398 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:36.271 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:36.271 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:36.272 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:38.228 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:38.228 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:38.229 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:40.153 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:40.153 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:40.154 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:42.228 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:42.228 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:42.229 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:44.217 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:44.217 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:44.219 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:46.100 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:46.100 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:46.101 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:47.966 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:47.967 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:47.968 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:49.836 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:49.836 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:49.837 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:51.696 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:51.696 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:51.697 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:53.656 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:53.656 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:53.657 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:40:55.603 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:55.603 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:55.604 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:57.572 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:57.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:57.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:40:59.525 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:40:59.525 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:40:59.526 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:01.449 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:01.450 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:01.451 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:03.455 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:03.455 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:03.456 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:05.377 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:05.377 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:05.378 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:07.331 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:07.331 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:07.332 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:09.230 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:09.230 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:09.231 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:11.567 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:11.568 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:11.568 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:13.973 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:13.973 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:13.974 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:15.894 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:15.895 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:15.895 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:17.970 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:17.970 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:17.971 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:20.186 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:20.186 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:20.187 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:22.083 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:22.083 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:22.084 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:24.069 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:24.069 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:24.070 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:26.102 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:26.102 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:26.103 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:28.220 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:28.220 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:28.222 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:30.097 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:30.098 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:30.099 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:31.977 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:31.977 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:31.978 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:33.962 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:33.962 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:33.963 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:35.894 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:35.895 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:35.896 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:37.959 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:37.959 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:37.960 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:39.989 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:39.989 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:39.990 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:41.899 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:41.899 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:41.900 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:43.802 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:43.802 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:43.803 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:45.680 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:45.681 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:45.682 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:47.604 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:47.604 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:47.605 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:41:49.873 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:49.874 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:49.875 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:52.282 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:52.282 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:52.283 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:54.359 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:54.360 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:54.361 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:56.642 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:56.642 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:56.643 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:41:58.694 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:41:58.694 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:41:58.695 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:42:00.950 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:00.950 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:00.951 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:02.898 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:02.899 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:02.900 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:04.815 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:04.815 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:04.816 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:06.913 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:06.913 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:06.914 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:09.058 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:09.058 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:09.059 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:42:10.960 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:10.960 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:10.961 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:12.837 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:12.838 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:12.839 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Fixed naming inconsistencies between Interval and IntervalsSet classes.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

09:42:14.766 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:14.766 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:14.767 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = (java.lang.Double.isInfinite(i.getSup())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getSup())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = (java.lang.Double.isInfinite(i.getInf())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getInf())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:16.679 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:16.679 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:16.680 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaX = end.getX() - start.getX(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:18.687 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:18.687 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:18.688 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double r = (((p.getX() - start.getX()) * deltaX) + ((p.getY() - start.getY()) * deltaY)) / 
((deltaX * deltaX) + (deltaY * deltaY)),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:20.724 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:20.725 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:20.726 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double dist1 = getStart().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double r = (((p.getX() - start.getX()) * deltaX) + ((p.getY() - start.getY()) * deltaY)) / 
((deltaX * deltaX) + (deltaY * deltaY)),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:22.737 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:22.737 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:22.738 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double dist2 = getEnd().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double dist1 = getStart().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:24.601 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:24.601 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:24.602 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return org.apache.commons.math3.util.FastMath.min(dist1, dist2),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double dist2 = getEnd().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:26.499 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:26.499 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:26.500 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double px = start.getX() + (r * deltaX),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return org.apache.commons.math3.util.FastMath.min(dist1, dist2),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:28.368 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:28.368 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:28.369 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double py = start.getY() + (r * deltaY),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double px = start.getX() + (r * deltaX),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:30.316 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:30.316 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:30.317 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double py = start.getY() + (r * deltaY),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:32.317 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:32.317 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:32.318 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

09:42:34.372 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:34.373 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:34.373 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if ((r < 0) || (r > 1)) {
	final double dist1 = getStart().distance(p);
	final double dist2 = getEnd().distance(p);

	return org.apache.commons.math3.util.FastMath.min(dist1, dist2);
} else 
{

	final double px = start.getX() + (r * deltaX);
	final double py = start.getY() + (r * deltaY);

	final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py);
	return interPt.distance(p);
},commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Fixed naming inconsistencies between Interval and IntervalsSet classes.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

09:42:36.329 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:36.330 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:36.331 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(interval.getSup())),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(interval.getInf())),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:87) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:38.713 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:38.713 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:38.714 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:40.813 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:40.813 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:40.814 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:43.005 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:43.005 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:43.009 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:45.064 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:45.064 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:45.065 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:47.338 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:47.338 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:47.339 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:49.328 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:49.328 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:49.329 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:51.247 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:51.247 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:51.248 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:42:53.271 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:53.271 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:53.272 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:42:55.461 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:55.461 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:55.462 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:42:57.361 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:57.362 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:57.363 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:42:59.305 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:42:59.306 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:42:59.307 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:01.186 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:01.186 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:01.187 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:03.136 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:03.136 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:03.138 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:05.165 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:05.165 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:05.166 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:07.210 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:07.210 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:07.211 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:09.199 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:09.199 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:09.200 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:11.096 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:11.096 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:11.097 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:13.018 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:13.018 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:13.019 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:14.881 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:14.881 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:14.882 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:16.785 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:16.785 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:16.786 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:18.829 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:18.829 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:18.830 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:20.866 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:20.866 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:20.867 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:23.262 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:23.262 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:23.263 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:25.453 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:25.454 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:25.455 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:27.636 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:27.636 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:27.638 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:29.762 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:29.763 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:29.764 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:31.991 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:31.992 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:31.993 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:34.387 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:34.387 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:34.388 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:43:36.618 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:36.618 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:36.619 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final int n = vertices.length,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:38.819 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:38.819 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:38.820 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:40.762 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:40.762 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:40.763 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:43.038 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:43.038 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:43.039 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:45.005 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:45.006 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:45.006 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:46.909 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:46.909 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:46.911 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:49.289 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:49.289 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:49.290 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:51.610 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:51.610 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:51.611 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

09:43:53.664 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:53.664 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:53.665 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:43:56.042 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:56.042 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:56.043 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:43:58.014 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:43:58.014 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:43:58.015 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:44:00.307 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:00.308 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:00.309 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:44:02.194 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:02.194 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:02.195 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:44:04.180 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:04.181 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:04.182 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:44:06.376 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:06.376 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:06.377 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

09:44:08.306 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:08.306 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:08.307 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

09:44:10.187 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:10.187 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:10.189 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

09:44:12.080 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:12.080 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:12.081 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = (java.lang.Double.isInfinite(i.getInf())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getInf())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Added distance to point to 2D Line and Segment.

09:44:14.119 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:14.119 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:14.120 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Added distance to point to 2D Line and Segment.

09:44:16.072 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:16.073 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:16.074 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:101) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:116) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

09:44:18.088 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
09:44:18.088 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
09:44:18.089 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:123) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:129) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = (java.lang.Double.isInfinite(i.getSup())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getSup())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:93) - modif = ingA & modif != ingB
[ERROR] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:84) - Error at generation 1
java.lang.IllegalArgumentException: Comparison method violates its general contract!
java.lang.IllegalArgumentException: Comparison method violates its general contract!
	at java.util.TimSort.mergeLo(TimSort.java:777)
	at java.util.TimSort.mergeAt(TimSort.java:514)
	at java.util.TimSort.mergeCollapse(TimSort.java:441)
	at java.util.TimSort.sort(TimSort.java:245)
	at java.util.Arrays.sort(Arrays.java:1512)
	at java.util.ArrayList.sort(ArrayList.java:1454)
	at java.util.Collections.sort(Collections.java:175)
	at fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy.getFixIngredient(PurposeBasedSearchStrategy.java:72)
	at fr.inria.astor.core.ingredientbased.IngredientBasedEvolutionaryRepairApproachImpl.createOperatorInstanceForPoint(IngredientBasedEvolutionaryRepairApproachImpl.java:95)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.modifyProgramVariant(EvolutionarySearchEngine.java:264)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.createNewProgramVariant(EvolutionarySearchEngine.java:198)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.processGenerations(EvolutionarySearchEngine.java:146)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:68)
	at fr.inria.main.evolution.AstorMain.run(AstorMain.java:203)
	at fr.inria.main.evolution.AstorMain.execute(AstorMain.java:247)
	at fr.inria.main.evolution.AstorMain.main(AstorMain.java:218)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 824.908
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:257) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:208) - Time Total(s): 3059.564


Node: 6809db342d2f



Date: Thu Nov 21 09:44:18 EST 2019

cd /script/jGenProg_Defects4J_Math_3;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Math-3 \
	-failing org.apache.commons.math3.util.MathArraysTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters mode:purpose \
	-dependencies /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

