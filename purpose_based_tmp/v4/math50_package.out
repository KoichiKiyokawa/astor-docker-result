Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO] 07:44:32,199 fr.inria.astor.core.setup.ProjectConfiguration:282 - Version of the JVM used: 1.7.0_181
[INFO] 07:44:32,203 main:381 - Java version of the JDK used to run tests: 1.7.0_181
[INFO] 07:44:32,204 main:382 - The compliance of the JVM is:  7
[INFO] 07:44:32,206 main:660 - command line arguments: [-mode  jgenprog  -location  .  -id  Math-50  -failing  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  mode:purpose  -dependencies  /script/jGenProg_Defects4J_Math_50/target/classes/:/script/jGenProg_Defects4J_Math_50/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO] 07:44:32,209 fr.inria.main.evolution.AstorMain:224 - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:975) - Source folders: [/script/jGenProg_Defects4J_Math_50/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:994) - Source Test folders: [/script/jGenProg_Defects4J_Math_50/./src/test/java]
[INFO ] fr.inria.main.evolution.AstorMain.createEngine(AstorMain.java:108) - mode is Purpose
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.resolveTestsToRun(AstorCoreEngine.java:1311) - Test retrieved from classes: 570
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Math_50/./output_astor/AstorMain-Math-50//bin//default from 570 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Math_50/./output_astor/AstorMain-Math-50//bin//default, /script/jGenProg_Defects4J_Math_50/target/classes/, /script/jGenProg_Defects4J_Math_50/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:2952, fails: 2, GZoltar suspicious 23540, with positive susp 160
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 2952
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 42 with susp > 0.1, we consider: 42
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:898) - Setting up the max to 1777830 milliseconds (1777 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:240) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Math_50/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:68) - building model: /script/jGenProg_Defects4J_Math_50/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:82) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Math_50/target/classes/, /script/jGenProg_Defects4J_Math_50/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:779) - Number of CtTypes created: 569
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 42
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 42,  37
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 37
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 37, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Math_50/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 1777830
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Math-50
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= purpose
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Math_50/target/classes/:/script/jGenProg_Defects4J_Math_50/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
07:49:59.687 [main] INFO  org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
07:50:01.122 [main] INFO  org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 6
07:50:01.901 [main] INFO  org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 6
07:50:01.905 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Linux]
07:50:01.905 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [48]; Memory: [3.5GB];
07:50:01.906 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
07:50:02.436 [main] INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [3.96 MB]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:05.030 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:05.030 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:05.041 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:07.934 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:07.934 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:07.935 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:10.547 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:10.548 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:10.549 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:13.015 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:13.015 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:13.016 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:15.403 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:15.404 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:15.405 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:18.067 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:18.067 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:18.068 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:20.171 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:20.171 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:20.172 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:22.219 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:22.219 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:22.220 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:24.287 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:24.287 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:24.288 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:26.336 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:26.336 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:26.337 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:28.802 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:28.802 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:28.803 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:31.975 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:31.976 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:31.978 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:34.406 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:34.406 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:34.407 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:36.684 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:36.686 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:36.687 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:39.168 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:39.169 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:39.170 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:41.547 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:41.548 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:41.550 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:44.057 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:44.057 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:44.058 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:46.365 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:46.366 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:46.367 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:48.808 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:48.809 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:48.811 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:50:51.255 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:51.255 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:51.256 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:53.710 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:53.710 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:53.711 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:56.325 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:56.326 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:56.327 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:50:58.888 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:50:58.889 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:50:58.890 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:01.107 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:01.107 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:01.108 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:03.664 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:03.664 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:03.666 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:06.041 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:06.042 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:06.043 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:08.085 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:08.085 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:08.086 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:10.120 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:10.120 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:10.121 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:12.177 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:12.177 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:12.178 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:14.697 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:14.697 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:14.699 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:17.261 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:17.261 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:17.262 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:19.882 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:19.882 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:19.884 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:22.490 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:22.491 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:22.492 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:51:24.564 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:24.564 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:24.565 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:26.978 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:26.978 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:26.979 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:29.544 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:29.545 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:29.546 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:51:31.958 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:31.959 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:31.960 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:34.341 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:34.342 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:34.343 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:36.596 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:36.596 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:36.597 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:51:39.095 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:39.096 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:39.097 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:51:41.352 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:41.353 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:41.354 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:43.212 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:43.213 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:43.214 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:51:45.122 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:45.122 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:45.123 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:51:47.089 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:47.089 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:47.090 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:51:48.944 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:48.944 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:48.945 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:51.085 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:51.085 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:51.086 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:51:53.446 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:53.447 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:53.448 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:51:55.712 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:55.712 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:55.713 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:51:57.736 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:57.736 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:57.737 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:51:59.919 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:51:59.920 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:51:59.920 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:01.956 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:01.957 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:01.959 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:03.897 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:03.897 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:03.898 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:52:06.349 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:06.349 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:06.351 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:08.851 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:08.852 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:08.853 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:11.346 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:11.346 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:11.347 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:13.743 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:13.743 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:13.744 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:52:16.041 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:16.042 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:16.042 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:18.026 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:18.026 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:18.027 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:20.479 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:20.479 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:20.481 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:22.961 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:22.962 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:22.963 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:25.342 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:25.343 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:25.344 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:27.584 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:27.584 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:27.586 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:29.654 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:29.654 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:29.655 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:32.010 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:32.010 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:32.011 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:34.402 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:34.403 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:34.403 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:36.307 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:36.308 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:36.308 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:38.162 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:38.162 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:38.163 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:40.070 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:40.070 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:40.071 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:42.099 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:42.099 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:42.100 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:44.463 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:44.463 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:44.464 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:46.551 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:46.552 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:46.553 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:48.770 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:48.770 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:48.771 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:52:50.775 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:50.775 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:50.776 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:53.030 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:53.030 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:53.031 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:55.406 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:55.407 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:55.408 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:57.761 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:57.761 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:57.762 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:52:59.972 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:52:59.972 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:52:59.973 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:02.487 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:02.487 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:02.488 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:04.851 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:04.852 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:04.853 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:07.271 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:07.272 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:07.273 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:09.371 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:09.372 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:09.372 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:11.644 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:11.645 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:11.645 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:13.796 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:13.796 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:13.797 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:53:16.199 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:16.199 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:16.200 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:18.558 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:18.558 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:18.559 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:20.750 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:20.750 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:20.751 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:53:22.658 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:22.658 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:22.659 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:24.527 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:24.527 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:24.528 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:26.548 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:26.548 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:26.549 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:28.898 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:28.899 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:28.900 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:53:31.263 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:31.264 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:31.265 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:53:33.560 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:33.560 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:33.561 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:35.612 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:35.613 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:35.614 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:37.696 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:37.696 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:37.697 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:53:39.874 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:39.874 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:39.875 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:53:41.946 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:41.947 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:41.948 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:43.944 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:43.944 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:43.945 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:46.431 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:46.431 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:46.432 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:53:48.980 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:48.981 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:48.982 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:51.498 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:51.498 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:51.499 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:54.003 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:54.004 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:54.004 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:53:56.413 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:56.413 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:56.414 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:53:58.746 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:53:58.747 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:53:58.747 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:00.755 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:00.755 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:00.755 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:03.054 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:03.054 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:03.055 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:05.121 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:05.121 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:05.122 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:54:07.505 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:07.505 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:07.506 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:54:09.783 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:09.783 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:09.784 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:11.934 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:11.935 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:11.935 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:14.085 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:14.085 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:14.086 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:54:16.250 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:16.250 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:16.251 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:54:18.370 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:18.370 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:18.371 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:20.380 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:20.380 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:20.381 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:22.489 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:22.489 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:22.490 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:24.672 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:24.672 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:24.673 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:27.125 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:27.126 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:27.127 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:54:29.563 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:29.564 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:29.564 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:32.029 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:32.030 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:32.030 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:34.382 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:34.382 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:34.383 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:36.467 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:36.467 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:36.468 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:54:38.808 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:38.809 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:38.810 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:54:40.992 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:40.993 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:40.994 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:43.521 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:43.522 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:43.523 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:46.037 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:46.037 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:46.038 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:54:48.565 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:48.565 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:48.566 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:54:50.905 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:50.905 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:50.906 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:53.227 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:53.227 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:53.228 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:54:55.645 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:55.645 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:55.646 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:54:57.991 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:54:57.992 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:54:57.992 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:55:00.320 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:00.320 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:00.321 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:55:02.423 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:02.423 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:02.424 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:04.589 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:04.590 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:04.591 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:06.576 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:06.576 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:06.577 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:55:08.742 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:08.742 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:08.742 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:55:10.811 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:10.811 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:10.812 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:12.726 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:12.726 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:12.727 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:14.742 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:14.742 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:14.743 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:16.915 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:16.915 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:16.916 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:55:18.949 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:18.949 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:18.950 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:55:20.888 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:20.888 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:20.889 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:22.837 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:22.837 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:22.838 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:24.880 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:24.880 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:24.881 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:27.067 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:27.067 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:27.068 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:29.068 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:29.069 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:29.069 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:55:30.993 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:30.994 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:30.994 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:55:32.877 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:32.878 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:32.879 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:34.747 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:34.748 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:34.748 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:36.763 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:36.764 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:36.765 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.

07:55:38.715 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:38.715 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:38.716 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

07:55:40.639 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:40.639 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:40.640 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:55:42.660 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:42.660 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:42.661 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:55:44.775 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:44.775 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:44.776 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.244943
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

07:55:46.899 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:46.899 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:46.900 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:55:49.153 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:49.153 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:49.154 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

07:55:51.416 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:51.417 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:51.418 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: -0.060551
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:55:53.575 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:53.576 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:53.576 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: -0.042547
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:55:55.854 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:55.854 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:55.855 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return bracketing.solve(remainingEval, f, xLo, xHi, baseRoot, allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:55:58.046 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:55:58.047 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:55:58.048 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: moved main java directory for compliance with maven standard directory layout

07:56:00.360 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:00.360 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:00.361 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.067698
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: moved main java directory for compliance with maven standard directory layout

07:56:02.651 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:02.652 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:02.652 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.067963
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: moved main java directory for compliance with maven standard directory layout

07:56:04.918 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:04.918 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:04.919 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: 0.102517
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".

07:56:06.936 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:06.936 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:06.937 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min)), allowedSolution),commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:09.232 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:09.232 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:09.233 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:11.452 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:11.453 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:11.455 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:14.085 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:14.085 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:14.086 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:17.110 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:17.110 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:17.111 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:19.421 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:19.421 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:19.422 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:21.808 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:21.809 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:21.810 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:24.510 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:24.510 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:24.511 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:26.893 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:26.893 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:26.893 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:29.043 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:29.044 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:29.044 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:31.327 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:31.327 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:31.328 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:33.472 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:33.472 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:33.473 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:56:35.745 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:35.746 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:35.747 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:56:38.125 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:38.125 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:38.126 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:40.642 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:40.642 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:40.643 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:42.852 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:42.852 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:42.853 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:45.244 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:45.244 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:45.245 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:47.619 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:47.619 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:47.620 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:49.707 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:49.707 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:49.708 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:51.830 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:51.830 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:51.831 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:53.952 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:53.952 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:53.954 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:56.400 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:56.400 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:56.401 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:56:58.546 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:56:58.546 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:56:58.547 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:57:00.793 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:00.793 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:00.794 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:57:03.284 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:03.284 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:03.285 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:57:05.869 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:05.870 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:05.871 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.128110
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:08.462 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:08.463 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:08.464 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:11.226 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:11.226 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:11.227 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:13.799 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:13.799 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:13.800 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:16.294 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:16.295 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:16.296 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:18.568 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:18.568 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:18.569 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:20.769 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:20.769 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:20.770 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:23.384 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:23.385 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:23.387 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:57:25.367 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:25.367 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:25.368 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: 0.129904
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:27.348 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:27.348 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:27.349 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:29.362 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:29.362 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:29.363 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:31.407 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:31.408 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:31.408 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: 0.216817
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return super.solve(maxEval, f, min, max, startValue), commit: Separate implementation of secant solver from bracketing solvers.
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.148968
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:57:39.717 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:39.718 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:39.719 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:57:41.931 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:41.931 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:41.932 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:57:44.262 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:44.262 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:44.263 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:57:46.528 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:46.529 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:46.529 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:57:48.604 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:48.604 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:48.605 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:51.068 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:51.069 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:51.070 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:57:53.664 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:53.664 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:53.665 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:56.192 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:56.192 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:56.193 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:57:58.628 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:57:58.628 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:57:58.629 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:58:01.098 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:01.098 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:01.099 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:58:03.175 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:03.176 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:03.176 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:05.577 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:05.577 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:05.579 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:58:08.140 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:08.141 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:08.142 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:10.625 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:10.626 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:10.627 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:13.158 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:13.158 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:13.159 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:58:15.603 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:15.603 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:15.604 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:17.589 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:17.589 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:17.590 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:20.078 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:20.078 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:20.079 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:58:22.135 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:22.135 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:22.136 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:24.284 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:24.284 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:24.286 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:26.696 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:26.697 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:26.698 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:28.776 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:28.777 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:28.778 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:30.782 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:30.782 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:30.783 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:32.777 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:32.777 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:32.777 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:35.053 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:35.054 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:35.055 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:37.552 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:37.552 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:37.553 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:40.047 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:40.048 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:40.049 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:42.362 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:42.362 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:42.363 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

07:58:44.566 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:44.566 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:44.568 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:46.888 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:46.889 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:46.890 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:49.365 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:49.366 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:49.367 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:58:51.842 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:51.843 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:51.844 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:58:54.388 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:54.388 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:54.389 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:58:56.797 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:56.797 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:56.798 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:58:58.954 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:58:58.954 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:58:58.955 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:01.277 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:01.277 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:01.278 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

07:59:03.701 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:03.701 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:03.702 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:06.191 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:06.191 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:06.192 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:08.257 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:08.257 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:08.258 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return polynomialFunction.getCoefficients(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:10.665 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:10.666 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:10.667 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return evaluations.getMaximalCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:59:13.002 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:13.002 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:13.003 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:14.947 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:14.948 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:14.949 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return evaluations.getCount(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:17.126 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:17.126 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:17.127 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:19.582 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:19.582 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:19.583 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

07:59:22.005 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:22.005 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:22.006 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:24.365 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:24.366 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:24.367 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:26.581 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:26.582 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:26.583 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:28.808 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:28.808 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:28.809 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:31.035 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:31.035 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:31.036 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:33.506 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:33.506 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:33.507 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:35.977 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:35.977 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:35.978 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:38.293 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:38.294 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:38.295 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:40.409 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:40.409 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:40.410 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:42.754 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:42.754 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:42.754 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:44.821 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:44.821 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:44.822 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:46.921 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:46.921 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:46.922 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchStart,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:49.313 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:49.313 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:49.314 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:51.331 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:51.332 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:51.332 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMin,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:53.370 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:53.370 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:53.371 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return absoluteAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:55.502 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:55.502 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:55.503 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

07:59:57.661 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:57.661 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:57.662 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

07:59:59.608 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
07:59:59.609 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
07:59:59.609 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:01.610 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:01.611 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:01.612 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:03.750 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:03.750 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:03.751 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:05.835 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:05.835 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:05.836 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:07.946 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:07.946 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:07.947 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:09.984 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:09.984 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:09.985 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:12.007 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:12.007 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:12.008 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return functionValueAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:13.990 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:13.990 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:13.991 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:15.992 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:15.992 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:15.993 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return searchMax,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:18.019 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:18.020 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:18.020 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:20.091 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:20.091 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:20.092 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return function.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:22.197 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:22.197 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:22.198 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return doSolve(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:00:24.414 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:24.415 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:24.415 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:26.708 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:26.708 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:26.709 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:29.181 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:29.184 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:29.185 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:31.629 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:31.629 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:31.630 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:33.994 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:33.994 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:33.996 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:00:36.257 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:36.257 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:36.258 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:38.744 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:38.744 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:38.745 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:40.675 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:40.675 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:40.676 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:42.715 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:42.715 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:42.716 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:45.006 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:45.006 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:45.007 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:00:46.990 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:46.990 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:46.991 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:48.997 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:48.997 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:48.998 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:50.959 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:50.959 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:50.960 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:53.187 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:53.187 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:53.188 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:00:55.231 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:55.231 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:55.232 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:00:57.209 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:57.209 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:57.211 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:00:59.201 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:00:59.201 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:00:59.202 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:01:01.354 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:01.354 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:01.355 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:03.425 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:03.425 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:03.426 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:05.532 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:05.532 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:05.533 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isSequence(start, mid, end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

08:01:07.525 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:07.525 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:07.526 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:01:09.495 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:09.495 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:09.496 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:11.462 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:11.462 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:11.463 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:01:13.569 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:13.569 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:13.570 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:15.914 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:15.915 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:15.916 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:18.292 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:18.293 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:18.293 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:20.658 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:20.659 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:20.660 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:23.098 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:23.098 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:23.099 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:25.532 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:25.532 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:25.533 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:28.018 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:28.019 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:28.020 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:30.391 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:30.391 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:30.393 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:01:32.834 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:32.834 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:32.835 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:34.915 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:34.915 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:34.915 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:01:37.223 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:37.224 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:37.224 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:39.310 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:39.310 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:39.311 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:01:41.659 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:41.659 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:41.660 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:43.837 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:43.837 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:43.838 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:46.301 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:46.301 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:46.302 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:48.503 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:48.503 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:48.504 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:01:50.870 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:50.870 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:50.871 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:53.348 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:53.349 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:53.350 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:55.816 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:55.816 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:55.817 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return r,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:01:57.955 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:01:57.956 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:01:57.957 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:00.308 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:00.309 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:00.309 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:02.373 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:02.373 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:02.374 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:04.820 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:04.821 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:04.822 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:07.338 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:07.338 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:07.339 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:09.839 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:09.839 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:09.840 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:12.164 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:12.165 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:12.166 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:14.476 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:14.477 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:14.478 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:16.941 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:16.941 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:16.942 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:19.112 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:19.112 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:19.113 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:21.439 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:21.439 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:21.440 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:23.593 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:23.594 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:23.594 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:26.115 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:26.116 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:26.117 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:28.482 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:28.482 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:28.483 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:30.854 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:30.854 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:30.855 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:33.561 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:33.562 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:33.563 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:36.016 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:36.016 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:36.017 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:38.422 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:38.422 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:38.423 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:40.827 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:40.828 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:40.828 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:43.010 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:43.010 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:43.011 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:45.037 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:45.038 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:45.039 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:47.008 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:47.009 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:47.009 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:49.014 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:49.014 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:49.015 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:02:51.530 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:51.530 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:51.531 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:53.985 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:53.985 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:53.986 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:56.529 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:56.529 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:56.530 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.024056
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:02:59.078 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:02:59.078 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:02:59.079 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.024056
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:03:01.099 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:01.099 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:01.100 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.024056
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.

08:03:03.164 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:03.164 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:03.165 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.024056
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:05.227 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:05.227 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:05.228 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:07.819 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:07.820 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:07.821 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:10.417 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:10.418 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:10.419 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:12.762 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:12.762 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:12.763 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:14.877 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:14.877 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:14.878 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:17.442 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:17.442 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:17.443 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:19.516 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:19.517 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:19.518 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:21.780 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:21.780 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:21.782 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return b,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:24.338 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:24.339 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:24.340 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

08:03:26.850 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:26.850 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:26.851 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:29.187 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:29.187 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:29.188 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:31.656 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:31.656 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:31.657 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return laguerre(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:34.262 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:34.262 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:34.263 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

08:03:36.667 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:36.667 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:36.668 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

08:03:39.192 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:39.192 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:39.193 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:41.484 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:41.484 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:41.485 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:44.037 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:44.038 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:44.039 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return laguerre(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:46.457 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:46.458 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:46.458 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

08:03:48.904 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:48.905 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:48.906 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x1,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

08:03:51.439 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:51.439 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:51.440 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-599 Added brackets around single-statement conditional branches.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:03:53.882 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:53.882 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:53.883 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x0,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: Separate implementation of secant solver from bracketing solvers.

08:03:56.476 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:56.476 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:56.478 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
, ingredientB: moved main java directory for compliance with maven standard directory layout

08:03:58.583 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:03:58.583 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:03:58.584 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max),commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:04:01.172 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:01.172 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:01.173 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return nextX,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:04:03.694 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:03.695 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:03.696 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[2],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:04:05.712 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:05.712 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:05.713 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[0],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:04:07.715 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:07.715 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:07.716 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x[1],commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.

08:04:09.620 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:09.620 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:09.621 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return maximalOrder,commit: Added a Brent-like solver that has higher (user specified) order and does bracket selection on the result: BracketingNthOrderBrentSolver.
}, sim: -0.252702
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: moved main java directory for compliance with maven standard directory layout
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

08:04:11.728 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:11.729 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:11.730 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return m,commit: moved main java directory for compliance with maven standard directory layout
}, sim: -0.147791
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Separate implementation of secant solver from bracketing solvers.
, ingredientB: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.

08:04:14.304 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:14.305 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:14.306 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return ((fLo >= 0) && (fHi <= 0)) || ((fLo <= 0) && (fHi >= 0)),commit: MATH-599 (part of the patch provided by D. Hendriks on JIRA, issue MATH-605). Improved Javadoc. Allow a bracketing interval to contain the root at its end-points.
}, sim: -0.110752
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Separate implementation of secant solver from bracketing solvers.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

08:04:16.789 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:16.790 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:16.791 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, min, max, startValue),commit: Separate implementation of secant solver from bracketing solvers.
}, sim: -0.028814
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

08:04:19.251 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:19.251 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:19.252 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return super.solve(maxEval, f, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.midpoint(min, max)),commit: MATH-451 Removed the "solve" methods lacking the "maxEval" parameter.
}, sim: 0.024056
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

08:04:21.639 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:21.640 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:21.641 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return false,commit: Improved efficiency in RandomDataImpl, LaguerreSolver, FastMath and OutlineExtractor by moving conditional code into blocks where it is needed.
}, sim: 0.056468
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton

08:04:24.232 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:24.232 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:24.233 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return baseRoot,commit: added a forceSide method to UnivariateRealsolversUtils to allow selecting a bracketing side even for non-bracketing solvers like Bren or Newton
}, sim: 0.063527
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:04:26.606 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:26.606 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:26.607 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solver.solve(java.lang.Integer.MAX_VALUE, function, x0, x1),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:04:29.214 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:29.214 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:29.216 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, java.lang.Double.NaN, java.lang.Double.NaN, startValue),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.

08:04:31.826 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:31.826 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:31.827 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return solve(maxEval, f, min, max, min + (0.5 * (max - min))),commit: MATH-451 In solvers, the maximum number of evaluations is passed as a parameter to the method "solve". The "setMaxEvaluations" accessor is removed.
}, sim: 0.066857
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:34.332 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:34.332 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:34.333 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (start < mid) && (mid < end),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:36.836 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:36.837 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:36.838 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (a + b) * 0.5,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:39.304 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:39.304 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:39.305 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return new double[]{ a, b },commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:41.524 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:41.524 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:41.525 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.bracket(function, initial, lowerBound, upperBound, java.lang.Integer.MAX_VALUE),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:44.054 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:44.054 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:44.055 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return x3,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:46.634 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:46.634 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:46.635 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(initial, max, fInitial, fMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:49.191 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:49.192 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:49.193 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return solve(min, initial, fMin, fInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:51.775 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:51.775 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:51.776 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return z,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:54.334 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:54.334 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:54.335 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return root,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:56.833 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:56.833 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:56.834 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return z.getReal(),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:04:59.204 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:04:59.204 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:04:59.205 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return brent(initial, max, yInitial, yMax),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-599 Added brackets around single-statement conditional branches.

08:05:01.514 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:01.514 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:01.515 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return x,commit: MATH-599 Added brackets around single-statement conditional branches.
}, sim: 0.208986
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:03.702 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:03.702 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:03.704 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return max,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
, ingredientB: Removed unecessary parens around return value.  JIRA: MATH-609.

08:05:05.862 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:05.862 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:05.863 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return brent(min, initial, yMin, yInitial),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:08.084 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:08.084 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:08.085 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return min,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:10.563 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:10.563 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:10.564 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return initial,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:12.990 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:12.990 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:12.991 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.isBracketing(function, lower, upper),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:15.432 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:15.432 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:15.433 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return relativeAccuracy,commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Removed unecessary parens around return value.  JIRA: MATH-609.
, ingredientB: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).

08:05:17.640 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
08:05:17.641 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
08:05:17.642 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingA: {code: return (org.apache.commons.math.util.FastMath.abs(z.getImaginary()) <= tolerance) || 
(z.abs() <= getFunctionValueAccuracy()),commit: Removed unecessary parens around return value.  JIRA: MATH-609.
}, sim: 0.122890
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: return solve(maxEval, f, min, max, startValue, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE), commit: MATH-599 Renamed "AllowedSolutions" to "AllowedSolution".
}, ingB: {code: return functionDerivative.value(point),commit: MATH-439 Refactored the "solvers" package. Implementations refer to number of evaluation of the objective function (instead of the number of iterations). New interfaces and base classes. "NewtonSolver" fits in the design without resorting to a cast. Created class "MullerSolver2" to contain the code of the method named "solve2" in class "MullerSolver". Removed "UnivariateRealSolverFactory" and "UnivariateRealSolverFactoryImpl". Default solver in "UnivariateRealSolverUtils" is explicitely instantiated. "AbstractContinuousDistribution": Type of exception thrown changed in "UnivariateRealSolverUtils". Factored out duplicate code (in "GaussNewtonOptimizerTest" and "LevenbergMarquardtOptimizerTest"): class "Circle" is now called "CircleVectorial". Also factored out the "Circle" class from "NonLinearConjugateGradientOptimizerTest": class is named "CircleScalar". Created "SecantSolverTest", moving there all the tests for the class "SecantSolver" that were located in class "BrentSolverTest". Created new interface and base class for polynomial functions solvers ("LaguerreSolver") so that the function type is now checked at compile time. Removed deprecated exceptions (MATH-441). Javadoc clean-up. Lowered tolerance values in some unit tests. Tests upgraded to Junit 4 (MATH-423).
}, sim: 0.112679
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:449) - -Found Solution, child variant #2
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:359) - Error variant :2 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 1056.272
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:249) - End Repair Search: Found solution
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:250) - Solution stored at: /script/jGenProg_Defects4J_Math_50/./output_astor/AstorMain-Math-50//src/
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:189) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 2
 
time(sec)= 1056
operation: RemoveOp
location= org.apache.commons.math.analysis.solvers.BaseSecantSolver
line= 188
lineSuspiciousness= 0.707
lineSuspiciousness= 0
original statement= x0 = 0.5 * ((x0 + x1) - org.apache.commons.math.util.FastMath.max(rtol * org.apache.commons.math.util.FastMath.abs(x1), atol))
buggy kind= CtAssignmentImpl|CtBlockImpl
fixed statement= 
generation= 1
ingredientScope= -
validation=|true|0|2952|[]|
diffpatch=--- /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
+++ /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
@@ -73,10 +73,9 @@
 						f0 *= f1 / (f1 + fx);
 						break;
 					case REGULA_FALSI :
-						if (x == x1) {
-							x0 = 0.5 * ((x0 + x1) - org.apache.commons.math.util.FastMath.max(rtol * org.apache.commons.math.util.FastMath.abs(x1), atol));
+						if (x == x1)
 							f0 = computeObjectiveValue(x0);
-						}
+
 						break;
 					default :
 						throw new org.apache.commons.math.exception.MathInternalError();


diffpatchoriginal=--- /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
+++ /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
@@ -184,10 +184,10 @@
 						break;
 					case REGULA_FALSI :
 
-						if (x == x1) {
-							x0 = 0.5 * ((x0 + x1) - org.apache.commons.math.util.FastMath.max(rtol * org.apache.commons.math.util.FastMath.abs(x1), atol));
+						if (x == x1)
+
 							f0 = computeObjectiveValue(x0);
-						}
+
 						break;
 					default :
 



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Math-50
TOTAL_TIME=1056.272
NR_GENERATIONS=1
NR_RIGHT_COMPILATIONS=1
NR_FAILLING_COMPILATIONS=null
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=2
TIME=1056
VALIDATION=|true|0|2952|[]|
GENERATION=1
FOLDER_SOLUTION_CODE=/script/jGenProg_Defects4J_Math_50/./output_astor/AstorMain-Math-50//src//variant-2
--Patch Hunk #1
OPERATOR=RemoveOp

LOCATION=org.apache.commons.math.analysis.solvers.BaseSecantSolver

PATH=/script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java

MODIFIED_FILE_PATH=/script/jGenProg_Defects4J_Math_50/./output_astor/AstorMain-Math-50//src//variant-2/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java

LINE=188

SUSPICIOUNESS=0.707

MP_RANKING=0

ORIGINAL_CODE=x0 = 0.5 * ((x0 + x1) - org.apache.commons.math.util.FastMath.max(rtol * org.apache.commons.math.util.FastMath.abs(x1), atol))

BUGGY_CODE_TYPE=CtAssignmentImpl|CtBlockImpl

PATCH_HUNK_CODE=null

PATCH_HUNK_TYPE=null

INGREDIENT_SCOPE=-

INGREDIENT_PARENT=null

PATCH_DIFF_ORIG=--- /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
+++ /script/jGenProg_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverjava
@@ -184,10 +184,10 @@
 						break;
 					case REGULA_FALSI :
 
-						if (x == x1) {
-							x0 = 0.5 * ((x0 + x1) - org.apache.commons.math.util.FastMath.max(rtol * org.apache.commons.math.util.FastMath.abs(x1), atol));
+						if (x == x1)
+
 							f0 = computeObjectiveValue(x0);
-						}
+
 						break;
 					default :
 



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:208) - Time Total(s): 1378.73


Node: 67fec01c2f83



Date: Mon Nov 25 08:07:31 EST 2019

cd /script/jGenProg_Defects4J_Math_50;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Math-50 \
	-failing org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters mode:purpose \
	-dependencies /script/jGenProg_Defects4J_Math_50/target/classes/:/script/jGenProg_Defects4J_Math_50/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

