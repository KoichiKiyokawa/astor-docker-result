Determine revision date.................................................... OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO] 00:36:45,195 fr.inria.astor.core.setup.ProjectConfiguration:282 - Version of the JVM used: 1.7.0_181
[INFO] 00:36:45,202 main:381 - Java version of the JDK used to run tests: 1.7.0_181
[INFO] 00:36:45,203 main:382 - The compliance of the JVM is:  7
[INFO] 00:36:45,205 main:660 - command line arguments: [-mode  jgenprog  -location  .  -id  Math-3  -failing  org.apache.commons.math3.util.MathArraysTest  -jvm4testexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -jvm4evosuitetestexecution  /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  package  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  mode:purpose  -dependencies  /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO] 00:36:45,211 fr.inria.main.evolution.AstorMain:224 - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:975) - Source folders: [/script/jGenProg_Defects4J_Math_3/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:994) - Source Test folders: [/script/jGenProg_Defects4J_Math_3/./src/test/java]
[INFO ] fr.inria.main.evolution.AstorMain.createEngine(AstorMain.java:108) - mode is Purpose
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.resolveTestsToRun(AstorCoreEngine.java:1311) - Test retrieved from classes: 818
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:74) - -Executing Gzoltar classpath: /script/jGenProg_Defects4J_Math_3/./output_astor/AstorMain-Math-3//bin//default from 818 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:154) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:174) - -gz-Adding classpath: [/script/jGenProg_Defects4J_Math_3/./output_astor/AstorMain-Math-3//bin//default, /script/jGenProg_Defects4J_Math_3/target/classes/, /script/jGenProg_Defects4J_Math_3/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testTwoSets
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testIllConditioned
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest#testCircleFitting
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[21]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[22]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[23]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[24]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[25]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[26]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[47]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[48]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[49]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[50]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.util.FastMathStrictComparisonTest#test1[51]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.linear.SimplexSolverTest#testMath828Cycle
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testBox
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testCross
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testInterval
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testMultiple
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest#testSinglePoint
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.stat.descriptive.rank.PercentileTest#testSpecialValues
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.exception.util.LocalizedFormatsTest#testMessageNumber
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.complex.ComplexTest#testReciprocalReal
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.complex.ComplexTest#testMath221
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:214) - Test failt: org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest#testCircleFitting
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - Gzoltar Test Result Total:5072, fails: 28, GZoltar suspicious 35140, with positive susp 2071
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:234) - nr test results 5072
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:289) - Gzoltar found: 946 with susp > 0.1, we consider: 946
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:898) - Setting up the max to 3519760 milliseconds (3519 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:709) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:240) - Creating model,  Code location from working folder: /script/jGenProg_Defects4J_Math_3/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:68) - building model: /script/jGenProg_Defects4J_Math_3/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:82) - Classpath (Dependencies) for building SpoonModel: [/script/jGenProg_Defects4J_Math_3/target/classes/, /script/jGenProg_Defects4J_Math_3/target/test-classes/, /defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:779) - Number of CtTypes created: 735
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:713) - 
---- Initial suspicious size: 946
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=105, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=108, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=111, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=112, susp=0.2834733547569204]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=68, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=69, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=71, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=72, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=73, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=74, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=75, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=76, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=77, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=78, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=79, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2, methodName=value([D)[D, lineNumber=81, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=53, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=54, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=55, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=56, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=57, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=58, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=59, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1, methodName=value([D)D, lineNumber=60, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=addPoint(DD)V, lineNumber=39, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=addPoint(DD)V, lineNumber=40, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=43, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=44, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=45, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=46, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getRadius(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D, lineNumber=47, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getObjectiveFunction()Lorg/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunction;, lineNumber=51, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=getObjectiveFunctionGradient()Lorg/apache/commons/math3/optim/nonlinear/scalar/ObjectiveFunctionGradient;, lineNumber=66, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar, methodName=access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/CircleScalar;)Ljava/util/ArrayList;, lineNumber=31, susp=0.2672612419124244]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane, methodName=getPlus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;, lineNumber=119, susp=0.21055872190307892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane, methodName=getMinus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;, lineNumber=126, susp=0.21055872190307892]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=62, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=63, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=65, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=66, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=68, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=71, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=72, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=90, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=95, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=99, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=100, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V, lineNumber=134, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=plusFound()Z, lineNumber=140, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.geometry.partitioning.InsideFinder, methodName=minusFound()Z, lineNumber=147, susp=0.19287918745261487]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=116, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=117, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=118, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=120, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1, methodName=value(D)D, lineNumber=121, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=113, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=114, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=125, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=126, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;, lineNumber=130, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math3.optim.nonlinear.scalar.LineSearch, methodName=access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;)Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;, lineNumber=35, susp=0.18333969940564226]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 946,  275
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 275
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 275, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:754) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /script/jGenProg_Defects4J_Math_3/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= irr-statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 3519760
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math3.util.MathArraysTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Math-3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_181
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= purpose
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
01:15:09.274 [main] INFO  org.nd4j.linalg.factory.Nd4jBackend - Loaded [CpuBackend] backend
01:15:10.786 [main] INFO  org.nd4j.nativeblas.NativeOpsHolder - Number of threads used for NativeOps: 6
01:15:11.658 [main] INFO  org.nd4j.nativeblas.Nd4jBlas - Number of threads used for BLAS: 6
01:15:11.663 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Backend used: [CPU]; OS: [Linux]
01:15:11.663 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Cores: [48]; Memory: [3.5GB];
01:15:11.663 [main] INFO  o.n.l.a.o.e.DefaultOpExecutioner - Blas vendor: [MKL]
01:15:12.195 [main] INFO  o.d.m.e.loader.WordVectorSerializer - Projected memory use for model: [3.96 MB]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:15:14.906 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:14.906 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:14.918 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final int n = vertices.length,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:15:17.496 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:17.496 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:17.498 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:19.835 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:19.836 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:19.837 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:22.485 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:22.485 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:22.486 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:25.060 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:25.060 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:25.061 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:27.500 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:27.501 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:27.503 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> edges = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:29.567 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:29.567 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:29.568 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> edges = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:31.872 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:31.873 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:31.874 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:33.853 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:33.854 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:33.855 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:36.008 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:36.008 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:36.009 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:38.274 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:38.275 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:38.276 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:40.172 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:40.172 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:40.174 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:42.100 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:42.100 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:42.101 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:44.183 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:44.183 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:44.184 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:46.330 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:46.331 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:46.332 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:48.412 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:48.413 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:48.414 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:50.531 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:50.531 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:50.533 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:15:53.056 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:53.057 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:53.058 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:15:55.325 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:55.325 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:55.326 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:15:57.207 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:57.208 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:57.209 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:15:59.110 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:15:59.110 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:15:59.111 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:01.067 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:01.068 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:01.069 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line == null) {
	line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:03.277 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:03.278 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:03.279 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:05.503 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:05.504 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:05.505 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:07.969 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:07.970 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:07.972 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:10.457 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:10.457 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:10.459 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:12.848 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:12.848 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:12.850 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:14.882 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:14.883 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:14.884 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:17.279 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:17.280 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:17.281 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:19.248 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:19.248 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:19.249 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:21.263 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:21.263 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:21.264 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, tree, edges),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:23.549 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:23.549 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:23.550 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:25.629 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:25.629 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:25.630 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:27.535 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:27.536 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:27.537 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:29.544 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:29.545 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:29.546 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:31.525 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:31.526 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:31.527 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:33.571 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:33.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:33.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:35.721 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:35.722 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:35.723 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: vertex.bindWith(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:37.682 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:37.682 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:37.683 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:39.942 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:39.943 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:39.944 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:42.422 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:42.422 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:42.424 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:44.936 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:44.936 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:44.938 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:47.083 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:47.084 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:47.085 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:49.026 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:49.026 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:49.028 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = edges.get(index++),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:51.392 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:51.392 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:51.393 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:53.452 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:53.453 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:53.454 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:16:55.374 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:55.374 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:55.375 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:57.482 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:57.483 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:57.484 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (((vertex != start) && (vertex != end)) && 
(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
	vertex.bindWith(line);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:16:59.704 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:16:59.705 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:16:59.706 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted.setNode(node),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:01.667 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:01.668 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:01.670 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:03.629 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:03.630 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:03.631 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:05.568 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:05.568 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:05.569 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:07.590 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:07.590 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:07.591 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:09.623 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:09.623 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:09.625 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:11.905 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:11.905 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:11.906 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:13.970 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:13.971 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:13.971 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:16.493 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:16.493 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:16.494 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
	if (((vertex != start) && (vertex != end)) && 
	(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
		vertex.bindWith(line);
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:18.861 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:18.861 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:18.862 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: inserted = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:21.053 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:21.053 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:21.055 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:23.572 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:23.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:23.574 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:25.918 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:25.919 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:25.920 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {


	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex start = vArray[i];
	final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex end = vArray[(i + 1) % n];




	org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end);
	if (line == null) {
		line = new org.apache.commons.math3.geometry.euclidean.twod.Line(start.getLocation(), end.getLocation());
	}


	edges.add(new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, end, line));


	for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex vertex : vArray) {
		if (((vertex != start) && (vertex != end)) && 
		(org.apache.commons.math3.util.FastMath.abs(line.getOffset(vertex.getLocation())) <= hyperplaneThickness)) {
			vertex.bindWith(line);
		}
	}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:17:28.210 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:28.210 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:28.212 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (node.insertCut(inserted.getLine())) {
	inserted.setNode(node);
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:30.401 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:30.402 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:30.403 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:32.623 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:32.624 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:32.625 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:34.917 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:34.917 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:34.919 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:37.462 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:37.463 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:37.464 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:39.711 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:39.711 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:39.712 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:41.724 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:41.724 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:41.725 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:43.613 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:43.613 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:43.614 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:45.525 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:45.526 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:45.526 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:47.434 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:47.434 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:47.435 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:49.711 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:49.712 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:49.713 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:51.774 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:51.774 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:51.775 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:17:53.721 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:53.721 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:53.722 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:56.168 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:56.169 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:56.170 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:17:58.721 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:17:58.722 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:17:58.723 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:01.283 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:01.283 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:01.284 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:03.793 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:03.794 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:03.795 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:06.289 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:06.289 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:06.291 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:08.705 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:08.706 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:08.707 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:10.784 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:10.785 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:10.786 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:13.100 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:13.101 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:13.102 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:15.180 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:15.180 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:15.181 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:17.440 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:17.440 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:17.441 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:19.456 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:19.456 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:19.457 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:21.481 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:21.482 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:21.483 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:23.718 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:23.718 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:23.720 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:25.634 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:25.635 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:25.636 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:27.549 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:27.549 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:27.550 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:29.637 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:29.637 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:29.638 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:31.674 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:31.674 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:31.675 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:33.680 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:33.680 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:33.681 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:35.728 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:35.728 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:35.729 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:37.714 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:37.715 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:37.716 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:40.094 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:40.095 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:40.096 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:42.672 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:42.672 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:42.673 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:45.210 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:45.211 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:45.213 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:47.753 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:47.754 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:47.755 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:49.788 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:49.788 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:49.789 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:52.266 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:52.266 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:52.267 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:18:54.212 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:54.212 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:54.213 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:56.146 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:56.146 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:56.147 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:18:58.301 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:18:58.301 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:18:58.302 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:00.523 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:00.524 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:00.525 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:02.452 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:02.452 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:02.454 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:04.385 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:04.385 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:04.386 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:06.523 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:06.524 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:06.525 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:09.045 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:09.045 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:09.047 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:11.583 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:11.584 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:11.585 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:14.081 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:14.081 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:14.082 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:16.544 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:16.545 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:16.546 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:18.772 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:18.773 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:18.774 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:21.022 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:21.022 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:21.023 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:23.213 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:23.214 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:23.215 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:25.131 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:25.132 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:25.133 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:27.374 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:27.374 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:27.375 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:29.370 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:29.370 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:29.371 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:31.453 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:31.453 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:31.454 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:33.367 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:33.367 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:33.368 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:35.449 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:35.449 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:35.450 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:37.614 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:37.614 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:37.615 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:39.571 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:39.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:39.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:41.530 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:41.530 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:41.531 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:43.424 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:43.425 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:43.426 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:45.349 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:45.349 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:45.350 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:47.405 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:47.406 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:47.408 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:19:49.441 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:49.441 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:49.442 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:19:51.481 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:51.481 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:51.482 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: switch (startSide) {
	case PLUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getOutgoing());
			plusList.add(splitPoint.getIncoming());
		} else {
			plusList.add(edge);
		}
		break;
	case MINUS :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

			final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
			minusList.add(splitPoint.getIncoming());
			plusList.add(splitPoint.getOutgoing());
		} else {
			minusList.add(edge);
		}
		break;
	default :
		if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
			plusList.add(edge);
		} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
			minusList.add(edge);
		}
		break;},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:19:53.540 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:53.540 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:53.541 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:19:55.528 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:55.528 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:55.529 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:57.474 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:57.474 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:57.475 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:19:59.426 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:19:59.426 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:19:59.427 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:01.411 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:01.411 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:01.412 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:03.309 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:03.310 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:03.311 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:05.187 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:05.187 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:05.188 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:07.178 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:07.178 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:07.179 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:09.084 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:09.085 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:09.086 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:11.088 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:11.088 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:11.089 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:20:13.010 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:13.010 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:13.011 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:20:15.029 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:15.030 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:15.030 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge edge : edges) {
	if (edge != inserted) {
		final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
		final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
		org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
		org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
		switch (startSide) {
			case PLUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getOutgoing());
					plusList.add(splitPoint.getIncoming());
				} else {
					plusList.add(edge);
				}
				break;
			case MINUS :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

					final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
					minusList.add(splitPoint.getIncoming());
					plusList.add(splitPoint.getOutgoing());
				} else {
					minusList.add(edge);
				}
				break;
			default :
				if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
					plusList.add(edge);
				} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
					minusList.add(edge);
				}
				break;}

	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:20:16.956 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:16.957 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:16.958 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:18.928 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:18.928 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:18.929 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:20.874 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:20.874 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:20.875 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:22.915 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:22.915 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:22.916 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:24.851 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:24.851 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:24.852 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:26.740 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:26.740 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:26.741 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:28.647 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:28.648 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:28.649 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:30.551 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:30.551 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:30.552 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!plusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getPlus(), plusList);
} else {
	node.getPlus().setAttribute(java.lang.Boolean.FALSE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:32.600 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:32.600 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:32.601 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:34.579 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:34.579 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:34.580 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:36.480 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:36.481 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:36.482 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:38.491 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:38.491 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:38.492 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:40.417 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:40.417 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:40.418 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:42.302 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:42.302 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:42.303 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:44.347 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:44.347 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:44.348 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: minusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:46.354 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:46.354 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:46.355 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:48.264 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:48.264 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:48.265 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:50.172 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:50.172 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:50.173 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.location = location,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:52.038 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:52.038 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:52.039 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:53.924 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:53.924 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:53.925 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
	minusList.add(edge);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:55.806 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:55.806 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:55.807 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:20:57.680 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:57.680 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:57.681 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:20:59.571 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:20:59.572 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:20:59.573 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:01.484 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:01.485 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:01.486 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:03.363 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:03.364 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:03.365 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:05.241 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:05.241 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:05.242 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:07.222 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:07.222 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:07.224 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:09.106 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:09.106 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:09.107 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:10.985 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:10.985 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:10.986 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:12.896 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:12.896 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:12.897 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (inserted.getNode() == null) {
	if (node.insertCut(inserted.getLine())) {
		inserted.setNode(node);
	} else {
		inserted = null;
	}
} else {
	inserted = null;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:14.880 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:14.880 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:14.881 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:16.764 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:16.764 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:16.765 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:18.669 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:18.669 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:18.670 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (inserted == null) {


	final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent();
	if ((parent == null) || (node == parent.getMinus())) {
		node.setAttribute(java.lang.Boolean.TRUE);
	} else {
		node.setAttribute(java.lang.Boolean.FALSE);
	}
	return;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: while ((inserted == null) && (index < edges.size())) {
	inserted = edges.get(index++);
	if (inserted.getNode() == null) {
		if (node.insertCut(inserted.getLine())) {
			inserted.setNode(node);
		} else {
			inserted = null;
		}
	} else {
		inserted = null;
	}
} ,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:20.564 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:20.564 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:20.565 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:22.561 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:22.562 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:22.563 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getPlus().setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:24.465 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:24.465 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:24.466 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:26.364 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:26.364 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:26.365 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.setAttribute(java.lang.Boolean.FALSE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:28.262 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:28.262 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:28.263 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> plusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:30.263 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:30.264 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:30.264 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge> minusList = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:32.146 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:32.146 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:32.147 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:34.083 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:34.084 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:34.085 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:35.957 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:35.957 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:35.958 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:37.974 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:37.974 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:37.975 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:39.924 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:39.925 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:39.926 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:41.806 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:41.806 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:41.807 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: minusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:43.714 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:43.714 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:43.715 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getIncoming()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:45.631 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:45.631 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:45.632 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(edge),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:47.548 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:47.548 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:47.549 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: plusList.add(splitPoint.getOutgoing()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:49.426 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:49.426 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:49.427 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:51.502 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:51.502 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:51.504 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:21:53.712 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:53.712 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:53.713 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:55.784 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:55.784 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:55.786 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:21:57.714 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:57.714 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:57.715 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:21:59.597 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:21:59.598 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:21:59.598 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:01.515 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:01.516 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:01.517 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:03.395 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:03.395 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:03.396 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:05.297 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:05.297 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:05.298 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:07.180 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:07.180 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:07.181 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:09.100 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:09.100 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:09.101 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:11.188 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:11.188 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:11.189 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:13.104 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:13.105 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:13.106 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:15.049 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:15.050 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:15.050 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:17.204 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:17.204 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:17.205 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:19.122 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:19.122 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:19.123 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:21.018 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:21.018 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:21.019 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:22.917 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:22.917 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:22.918 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:25.354 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:25.354 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:25.355 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:27.849 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:27.849 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:27.850 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:30.163 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:30.163 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:30.164 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:32.293 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:32.293 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:32.294 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:34.500 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:34.501 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:34.502 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:36.610 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:36.610 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:36.611 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:38.647 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:38.648 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:38.649 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:40.787 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:40.787 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:40.788 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:42.679 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:42.680 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:42.681 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:44.833 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:44.833 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:44.834 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:46.913 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:46.913 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:46.914 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:48.878 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:48.878 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:48.879 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:50.891 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:50.891 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:50.892 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:22:52.815 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:52.815 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:52.816 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:54.717 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:54.717 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:54.718 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:56.729 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:56.730 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:56.731 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:22:58.731 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:22:58.732 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:22:58.733 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:00.728 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:00.728 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:00.729 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:02.743 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:02.743 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:02.744 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:04.772 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:04.773 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:04.774 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:06.689 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:06.689 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:06.690 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:08.588 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:08.588 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:08.589 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:10.474 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:10.474 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:10.475 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:12.482 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:12.482 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:12.483 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:14.394 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:14.394 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:14.395 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:16.380 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:16.380 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:16.381 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:18.327 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:18.327 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:18.328 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:20.260 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:20.261 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:20.262 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:22.258 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:22.258 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:22.259 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:24.269 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:24.269 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:24.270 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:26.153 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:26.153 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:26.155 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:28.127 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:28.127 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:28.128 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:30.031 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:30.031 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:30.032 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:31.909 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:31.910 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:31.911 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:34.171 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:34.171 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:34.172 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:36.695 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:36.696 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:36.697 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:38.969 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:38.970 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:38.971 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:41.338 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:41.338 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:41.339 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:43.642 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:43.642 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:43.643 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:45.736 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:45.737 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:45.738 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:48.079 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:48.079 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:48.080 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:50.095 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:50.095 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:50.096 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:23:52.104 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:52.104 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:52.105 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:54.445 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:54.446 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:54.447 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:56.383 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:56.384 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:56.385 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:23:58.358 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:23:58.359 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:23:58.359 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:00.363 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:00.363 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:00.364 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:02.875 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:02.875 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:02.876 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:05.336 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:05.337 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:05.338 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: start.setOutgoing(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:07.762 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:07.762 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:07.764 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:09.784 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:09.784 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:09.785 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:12.124 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:12.125 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:12.126 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:14.221 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:14.222 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:14.223 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:16.675 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:16.675 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:16.676 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:18.935 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:18.936 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:18.937 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:21.099 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:21.099 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:21.100 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:23.307 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:23.307 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:23.308 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:25.295 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:25.295 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:25.296 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:27.503 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:27.503 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:27.504 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:29.641 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:29.642 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:29.643 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.start = start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:31.562 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:31.563 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:31.564 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return start,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:33.445 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:33.445 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:33.446 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:35.453 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:35.453 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:35.454 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:37.571 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:37.571 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:37.572 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:39.596 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:39.597 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:39.598 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:41.609 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:41.609 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:41.610 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:43.514 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:43.514 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:43.515 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:45.412 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:45.412 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:45.413 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:47.319 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:47.319 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:47.320 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:49.234 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:49.234 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:49.235 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:51.170 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:51.171 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:51.172 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:53.060 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:53.060 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:53.061 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitVertex = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(line.intersection(splitLine)),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:24:55.058 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:55.058 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:55.059 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:24:57.580 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:24:57.580 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:24:57.581 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:00.105 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:00.105 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:00.106 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:02.484 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:02.484 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:02.486 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:04.552 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:04.553 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:04.554 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: splitVertex.bindWith(splitLine),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:25:06.922 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:06.922 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:06.923 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:08.812 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:08.812 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:08.813 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:10.980 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:10.980 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:10.981 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.line = line,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:13.022 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:13.023 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:13.024 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:15.451 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:15.451 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:15.452 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:25:17.970 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:17.971 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:17.972 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:20.183 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:20.183 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:20.184 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:22.270 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:22.270 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:22.271 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:24.361 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:24.361 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:24.362 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:26.476 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:26.476 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:26.477 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:25:28.398 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:28.398 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:28.400 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:30.641 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:30.642 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:30.643 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Fixed naming inconsistencies between Interval and IntervalsSet classes.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

01:25:32.696 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:32.697 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:32.698 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = (java.lang.Double.isInfinite(i.getSup())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getSup())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = (java.lang.Double.isInfinite(i.getInf())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getInf())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:34.734 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:34.734 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:34.735 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaX = end.getX() - start.getX(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:36.634 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:36.634 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:36.635 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double r = (((p.getX() - start.getX()) * deltaX) + ((p.getY() - start.getY()) * deltaY)) / 
((deltaX * deltaX) + (deltaY * deltaY)),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:38.730 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:38.730 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:38.731 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double dist1 = getStart().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double r = (((p.getX() - start.getX()) * deltaX) + ((p.getY() - start.getY()) * deltaY)) / 
((deltaX * deltaX) + (deltaY * deltaY)),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:40.842 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:40.842 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:40.843 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double dist2 = getEnd().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double dist1 = getStart().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:42.850 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:42.850 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:42.851 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return org.apache.commons.math3.util.FastMath.min(dist1, dist2),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double dist2 = getEnd().distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:44.826 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:44.827 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:44.827 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double px = start.getX() + (r * deltaX),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return org.apache.commons.math3.util.FastMath.min(dist1, dist2),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:46.718 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:46.718 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:46.720 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final double py = start.getY() + (r * deltaY),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double px = start.getX() + (r * deltaX),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:48.718 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:48.719 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:48.720 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double py = start.getY() + (r * deltaY),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:50.662 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:50.662 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:50.663 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Added distance to point to 2D Line and Segment.
, ingredientB: Added distance to point to 2D Line and Segment.

01:25:52.638 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:52.638 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:52.639 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if ((r < 0) || (r > 1)) {
	final double dist1 = getStart().distance(p);
	final double dist2 = getEnd().distance(p);

	return org.apache.commons.math3.util.FastMath.min(dist1, dist2);
} else 
{

	final double px = start.getX() + (r * deltaX);
	final double py = start.getY() + (r * deltaY);

	final org.apache.commons.math3.geometry.euclidean.twod.Vector2D interPt = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(px, py);
	return interPt.distance(p);
},commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Fixed naming inconsistencies between Interval and IntervalsSet classes.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

01:25:54.633 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:54.633 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:54.634 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(interval.getSup())),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(interval.getInf())),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:91) - ingredientAもingredientBもmodificationPointと同じコミットメッセージ
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:56.674 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:56.674 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:56.675 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:25:58.705 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:25:58.705 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:25:58.706 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[] vArray = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex[n],commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:00.620 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:00.620 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:00.621 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: for (int i = 0; i < n; ++i) {
	vArray[i] = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex(vertices[i]);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:02.517 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:02.518 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:02.519 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: org.apache.commons.math3.geometry.euclidean.twod.Line line = start.sharedLineWith(end),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:04.411 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:04.411 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:04.412 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> tree = new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:06.353 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:06.353 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:06.354 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:08.303 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:08.303 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:08.304 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (!minusList.isEmpty()) {
	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(hyperplaneThickness, node.getMinus(), minusList);
} else {
	node.getMinus().setAttribute(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:10.196 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:10.196 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:10.197 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> parent = node.getParent(),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:12.068 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:12.068 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:12.070 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.lines = new java.util.ArrayList<org.apache.commons.math3.geometry.euclidean.twod.Line>(),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:13.943 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:13.943 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:13.944 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:15.922 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:15.922 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:15.923 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: lines.add(line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:18.044 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:18.044 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:18.045 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:20.042 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:20.042 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:20.043 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:22.149 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:22.149 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:22.150 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return line1,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:24.643 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:24.644 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:24.645 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (line1 == line2) {
	return line1;
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:27.108 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:27.109 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:27.110 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
	if (line1 == line2) {
		return line1;
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:29.526 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:29.526 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:29.527 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: for (final org.apache.commons.math3.geometry.euclidean.twod.Line line1 : lines) {
	for (final org.apache.commons.math3.geometry.euclidean.twod.Line line2 : vertex.lines) {
		if (line1 == line2) {
			return line1;
		}
	}
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:31.496 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:31.496 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:31.497 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.incoming = incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:33.842 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:33.842 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:33.843 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: bindWith(incoming.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:36.016 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:36.016 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:36.017 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return incoming,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:38.462 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:38.463 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:38.464 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: this.outgoing = outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:40.481 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:40.481 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:40.482 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: bindWith(outgoing.getLine()),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:42.869 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:42.870 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:42.871 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return outgoing,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:45.408 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:45.409 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:45.410 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.end = end,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:47.797 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:47.798 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:47.799 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: end.setIncoming(this),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:49.886 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:49.886 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:49.887 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge startHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(start, splitVertex, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:52.156 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:52.156 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:52.157 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:26:54.250 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:54.250 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:54.251 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:26:56.490 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:56.490 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:56.491 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final int n = vertices.length,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:26:58.601 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:26:58.602 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:26:58.603 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: if (n == 0) {

	return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE);
},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:01.152 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:01.153 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:01.154 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:03.421 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:03.422 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:03.423 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.getMinus().setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:05.684 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:05.684 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:05.686 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if ((parent == null) || (node == parent.getMinus())) {
	node.setAttribute(java.lang.Boolean.TRUE);
} else {
	node.setAttribute(java.lang.Boolean.FALSE);
},commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:08.219 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:08.220 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:08.221 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: int index = 0,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:27:10.585 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:10.585 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:10.586 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:27:13.100 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:13.100 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:13.101 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge endHalf = new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Edge(splitVertex, end, line),commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Finalized fix for MATH-880.

01:27:15.202 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:15.202 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:15.203 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:17.238 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:17.239 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:17.240 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:27:19.448 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:19.448 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:19.449 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: if (edge != inserted) {
	final double startOffset = inserted.getLine().getOffset(edge.getStart().getLocation());
	final double endOffset = inserted.getLine().getOffset(edge.getEnd().getLocation());
	org.apache.commons.math3.geometry.partitioning.Side startSide = (org.apache.commons.math3.util.FastMath.abs(startOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : startOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	org.apache.commons.math3.geometry.partitioning.Side endSide = (org.apache.commons.math3.util.FastMath.abs(endOffset) <= hyperplaneThickness) ? 
	org.apache.commons.math3.geometry.partitioning.Side.HYPER : endOffset < 0 ? org.apache.commons.math3.geometry.partitioning.Side.MINUS : org.apache.commons.math3.geometry.partitioning.Side.PLUS;
	switch (startSide) {
		case PLUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getOutgoing());
				plusList.add(splitPoint.getIncoming());
			} else {
				plusList.add(edge);
			}
			break;
		case MINUS :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {

				final org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex splitPoint = edge.split(inserted.getLine());
				minusList.add(splitPoint.getIncoming());
				plusList.add(splitPoint.getOutgoing());
			} else {
				minusList.add(edge);
			}
			break;
		default :
			if (endSide == org.apache.commons.math3.geometry.partitioning.Side.PLUS) {
				plusList.add(edge);
			} else if (endSide == org.apache.commons.math3.geometry.partitioning.Side.MINUS) {
				minusList.add(edge);
			}
			break;}

},commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:27:21.547 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:21.547 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:21.548 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: this.node = null,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:27:23.933 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:23.934 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:23.935 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: startHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:26.460 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:26.461 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:26.462 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: node.setAttribute(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:28.445 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:28.445 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:28.446 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return tree,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Improved polygons creation with a numerically more robust constructor.

01:27:30.887 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:30.888 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:30.889 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.TRUE),commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Finalized fix for MATH-880.
, ingredientB: Finalized fix for MATH-880.

01:27:32.846 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:32.846 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:32.847 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return splitVertex,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: endHalf.node = node,commit: Finalized fix for MATH-880.
}, sim: 0.217651
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

01:27:34.940 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:34.940 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:34.941 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D start = (java.lang.Double.isInfinite(i.getInf())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getInf())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Added distance to point to 2D Line and Segment.

01:27:37.228 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:37.228 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:37.229 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: return interPt.distance(p),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Added distance to point to 2D Line and Segment.

01:27:39.180 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:39.180 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:39.181 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final double deltaY = end.getY() - start.getY(),commit: Added distance to point to 2D Line and Segment.
}, sim: -0.133868
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:105) - modif != ingA & modif = ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:120) - ingredientA: Improved polygons creation with a numerically more robust constructor.
, ingredientB: Fixed naming inconsistencies between Interval and IntervalsSet classes.

01:27:41.069 [main] INFO  o.d.m.s.SequenceVectors - Building learning algorithms:
01:27:41.069 [main] INFO  o.d.m.s.SequenceVectors -           building SequenceLearningAlgorithm: [PV-DBOW]
01:27:41.070 [main] INFO  o.d.m.s.SequenceVectors -           building ElementsLearningAlgorithm: [SkipGram]
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:127) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingA: {code: return location,commit: Improved polygons creation with a numerically more robust constructor.
}, sim: -0.089077
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:133) - modif: {code: final boolean direct = org.apache.commons.math3.util.FastMath.sin(thisLine.getAngle() - otherLine.getAngle()) < 0, commit: MATH-444 Base package name change: "o.a.c.math" -> "o.a.c.math3"
}, ingB: {code: final org.apache.commons.math3.geometry.euclidean.twod.Vector2D end = (java.lang.Double.isInfinite(i.getSup())) ? 
null : ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D) (line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(i.getSup())))),commit: Fixed naming inconsistencies between Interval and IntervalsSet classes.
}, sim: 0.022053
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[INFO ] fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy$1.compare(PurposeBasedSearchStrategy.java:97) - modif = ingA & modif != ingB
[ERROR] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:84) - Error at generation 1
java.lang.IllegalArgumentException: Comparison method violates its general contract!
java.lang.IllegalArgumentException: Comparison method violates its general contract!
	at java.util.TimSort.mergeLo(TimSort.java:777)
	at java.util.TimSort.mergeAt(TimSort.java:514)
	at java.util.TimSort.mergeCollapse(TimSort.java:441)
	at java.util.TimSort.sort(TimSort.java:245)
	at java.util.Arrays.sort(Arrays.java:1512)
	at java.util.ArrayList.sort(ArrayList.java:1454)
	at java.util.Collections.sort(Collections.java:175)
	at fr.inria.astor.approaches.purpose_simularity.PurposeBasedSearchStrategy.getFixIngredient(PurposeBasedSearchStrategy.java:72)
	at fr.inria.astor.core.ingredientbased.IngredientBasedEvolutionaryRepairApproachImpl.createOperatorInstanceForPoint(IngredientBasedEvolutionaryRepairApproachImpl.java:95)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.modifyProgramVariant(EvolutionarySearchEngine.java:264)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.createNewProgramVariant(EvolutionarySearchEngine.java:198)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.processGenerations(EvolutionarySearchEngine.java:146)
	at fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:68)
	at fr.inria.main.evolution.AstorMain.run(AstorMain.java:203)
	at fr.inria.main.evolution.AstorMain.execute(AstorMain.java:247)
	at fr.inria.main.evolution.AstorMain.main(AstorMain.java:218)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - Time Repair Loop (s): 819.182
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:172) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:247) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:257) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:208) - Time Total(s): 3055.876


Node: 4dc3205db224



Date: Mon Nov 25 01:27:41 EST 2019

cd /script/jGenProg_Defects4J_Math_3;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
java -Xmx4048m -cp /script/libs/jtestex7.jar:/astor/target/astor-0.0.2-SNAPSHOT-jar-with-dependencies.jar fr.inria.main.evolution.AstorMain \
	-mode jgenprog \
	-location . \
	-id Math-3 \
	-failing org.apache.commons.math3.util.MathArraysTest \
	-jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-jvm4evosuitetestexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope package \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters mode:purpose \
	-dependencies /script/jGenProg_Defects4J_Math_3/target/classes/:/script/jGenProg_Defects4J_Math_3/target/test-classes/:/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";

